{"version":3,"sources":["components/General/SelectComponent/style.module.css","components/Profile/style.module.css","components/General/AsyncSelectComponent/style.module.css","components/MenuItem/style.module.css","components/AppointmentPicker/style.module.css","components/General/Spinner/style.module.css","components/CreateHospital/style.module.css","components/CreateDepartment/style.module.css","pages/SignupPage/style.module.css","components/Menu/style.module.css","pages/App/style.module.css","components/RegNoInput/style.module.css","components/HospitalSettings/style.module.css","components/PatientRegistrationForm/style.module.css","components/General/Button/index.js","firebase.js","redux/actions/loginActions.js","components/General/Spinner/index.js","pages/LoginPage/index.js","components/Logout/index.js","components/General/TextBox/index.js","components/CreateHospital/index.js","components/General/SelectComponent/index.js","components/CreateDepartment/index.js","pages/HomePageDefault/index.js","redux/actions/signupActions.js","pages/SignupPage/index.js","auth/Auth.js","components/General/AsyncSelectComponent/index.js","components/Profile/index.js","components/Logo/index.js","components/ProfileToolbar/index.js","components/Toolbar/index.js","components/MenuItem/index.js","components/Menu/index.js","components/PatientRegistrationForm/index.js","redux/actions/appointmentActions.js","components/TimePicker/index.js","components/DatePicker/index.js","components/AppointmentContainer/index.js","components/RegNoInput/index.js","components/AppointmentPicker/index.js","context/AppointmentContext.js","components/HospitalSettings/index.js","components/ListHospitals/index.js","components/ListDepartments/index.js","components/ListEmployees/index.js","pages/App/index.js","reportWebVitals.js","redux/reducer/signupLoginReducer.js","redux/reducer/appointmentReducer.js","index.js","components/General/TextBox/style.module.css","components/AppointmentContainer/style.module.css"],"names":["module","exports","Button","props","onClick","clicked","className","text","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","loginUserStart","type","loginUserSuccess","token","userId","userRole","lname","fname","loginUserError","error","logout","localStorage","removeItem","Spinner","css","Loader","connect","state","logginIn","signupLoginReducer","authServerError","authServerErrorCode","dispatch","login","email","password","data","returnSecureToken","axios","post","then","result","idToken","localId","expiresIn","expireDate","Date","getTime","refreshToken","collection","where","get","querySnapshot","forEach","doc","setItem","catch","console","log","err","actions","useState","form","setForm","inputRef","React","createRef","useEffect","current","focus","to","ref","onChange","el","formBefore","target","value","placeholder","style","color","e","preventDefault","TextBox","errorMarkRef","useRef","correctMarkRef","visibility","FormControl","Label","label","Container","IconStyleCorrect","IconStyleWrong","name","toUpperCase","setTimeout","setWarning","allwarnings","length","setFormCheck","formCheckInfo","setComponentInfo","componentAllInfo","regNo","phoneNo","khoroo","building","orgRegNo","hospitalName","departmentName","officePhoneNo","password1","password2","description","hospEmail","departmentEmail","departmentPhoneNo","handleChange","Error","warning","CreateHospital","createdDate","modifiedDate","hospitalInfo","setHospitalInfo","formCheck","formErrors","setFormErrors","componentInfo","textLeftWarningForSubmit","alert","textRightWarningForSubmit","hospitalDocRef","set","hospitalRegId","id","SelectComponent","customStyles","menu","provided","borderBottom","padding","control","base","width","borderColor","container","marginTop","marginBottom","singleValue","selectComponentRef","styles","defaultValue","onchangefunc","componentLabel","citizenship","gender","city","district","options","CreateDepartment","departmentInfo","setDepartmentInfo","employeeInfo","setEmployeeInfo","optionsHospitals","optionsEmployees","hospitals","setHospitals","employees","setEmployees","tempStorageHospital","tempStorageEmployee","fetchData","a","hospitalsRef","employeesRef","dataRefHospital","dataRefEmployee","docs","map","hospital","currentID","dateCreated","toDate","dateModified","getUTCDate","getMonth","getUTCFullYear","dataStorage","push","employee","substring","departmentDocRef","departmentId","signupUserStart","signupUserSuccess","signupUserError","saving","signupUser","uId","setError","asyncGetData","currentDate","auth","createUserWithEmailAndPassword","user","resetInput","uid","AuthContext","createContext","AuthProvider","currentUser","setCurrentUser","loading","setLoading","onAuthStateChanged","display","position","zIndex","top","right","Provider","children","AsyncSelectComponent","defaultOptions","optionsUserRole","changeUserRole","Profile","setEmail","setLname","setFname","setUserRole","setDescription","setCreatedDate","setModifiedDate","setPhoneNo","setRegNo","setDefaultValue","location","toLocaleDateString","filter","d","includes","ProfileUpdateForm","Form","update","Logo","src","alt","pathname","Toolbar","MenuItem","activeClassName","active","link","Menu","iconType","PatientRegistrationForm","patientInfo","setPatientInfo","changeCitizenship","changeGender","changeCity","changeDistrict","patientDocRef","patientId","collectRegNo","selectedRegNo","selectedDate","appointmentReducer","test1","collectAppTime","selectedTime","isMulti","loadOptions","inputValue","Promise","resolve","timeOptions","undefined","i","toLowerCase","filterColors","createOptionForDate","date","moment","isMoment","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","chrono","daysInMonth","Array","apply","x","add","isDisabled","format","createCalendarOptions","reduce","acc","str","substr","days","daysHeaderStyles","paddingTop","paddingLeft","borderTop","daysHeaderItemStyles","cursor","fontSize","fontWeight","daysContainerStyles","Group","Heading","getStyles","innerProps","headingProps","cx","theme","aria-label","day","Option","innerRef","defaultStyles","margin","textAlign","borderRadius","getOptionStyles","indentBy","marginLeft","DatePicker","collectAppDate","prepareTimeOptions","busyTimes","setTimeOptions","this","components","filterOption","isOptionSelected","o","v","some","isSame","maxMenuHeight","Component","l","timeOptionsIndexes","splice","indexOf","shift","removeUsedItemsFromList","removeValues","testingValue","buttonText","setButtonText","chosenDate","setChosenDate","chosenTime","setChosenTime","displayNewPatientForm","setDisplayNewPatientForm","setDisplay","search","setSearch","documents","setDocuments","wrapperRef","window","addEventListener","handleClickOutside","removeEventListener","event","wrap","contains","Title","Input","valuetype","SearchBar","obj","charAt","Math","random","toString","Object","keys","department","doctor","regDate","regBy","registerAppTimesToServer","AppointmentContext","initialState","appsDate","appsTime","isClicked","AppointmentStore","appointments","setAppointments","toggleAppBtnState","setToggleAppBtnState","funcToggleAppBtn","time","HospitalSettings","ListHospitals","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","tempStorage","handleSearch","selectedKeys","confirm","dataIndex","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","onPressEnter","icon","SearchOutlined","size","handleReset","closeDropdown","filterIcon","filtered","onFilter","record","onFilterDropdownVisibleChange","visible","select","render","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","columns","title","key","flexDirection","marginRight","float","Excel","addSheet","addColumns","addDataSource","saveAs","dataSource","pagination","pageSize","scroll","y","exportable","ListDepartment","departments","setDepartments","departmentsRef","ListEmployees","autoLogin","leftSeconds","autoLoginAfterMilSeconds","ms","grant_type","refresh_token","getItem","process","HomePage","path","component","Logout","SignupPage","AppointmentPicker","AppointmentContainer","HomePageDefault","LoginPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","response","message","code","apps","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","middlewares","store","next","getState","thunk","createStore","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.734b9a12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__39P-t\",\"IconStyleCorrect\":\"style_IconStyleCorrect__1ITPk\",\"IconStyleWrong\":\"style_IconStyleWrong__im1pG\",\"FormControl\":\"style_FormControl__-BNEn\",\"Label\":\"style_Label__sNHtq\",\"Select\":\"style_Select__1rNj4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"style_Profile__3Doct\",\"ProfileUpdateForm\":\"style_ProfileUpdateForm__7AGQb\",\"FormControl\":\"style_FormControl__3CPjT\",\"Label\":\"style_Label__3uzBR\",\"Input\":\"style_Input__3rxxn\",\"FocusInput\":\"style_FocusInput__2diqC\",\"SelectStyle\":\"style_SelectStyle__1YwF6\",\"Title\":\"style_Title__2ui-Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__1Ddga\",\"IconStyleCorrect\":\"style_IconStyleCorrect__2UJiu\",\"IconStyleWrong\":\"style_IconStyleWrong__2qi3q\",\"FormControl\":\"style_FormControl__2kOBz\",\"Label\":\"style_Label__3OnUj\",\"Select\":\"style_Select__2_jv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuItem\":\"style_MenuItem__3TOha\",\"active\":\"style_active__1kOIE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"style_Profile__3G76N\",\"ProfileUpdateForm\":\"style_ProfileUpdateForm__3aA2s\",\"Input\":\"style_Input__xdNcK\",\"TimeBoxContainer\":\"style_TimeBoxContainer__1rxIb\",\"TimeBox\":\"style_TimeBox__1mxJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"style_Loader__HKpGb\",\"load8\":\"style_load8__2egtP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__2vPq4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__3VP-B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__1IV-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"style_Menu__2NRkr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HomePage\":\"style_HomePage___45eJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"style_Input__1Wg6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__38_kJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__1JKDD\",\"Profile\":\"style_Profile__1Rfnl\",\"ProfileUpdateForm\":\"style_ProfileUpdateForm__gTL9J\",\"FormControl\":\"style_FormControl__1P5Rm\",\"Label\":\"style_Label__3202a\",\"Input\":\"style_Input__DewiY\",\"FocusInput\":\"style_FocusInput__27v7x\",\"SelectStyle\":\"style_SelectStyle__10K0b\",\"Title\":\"style_Title__2A5pK\"};","import React from \"react\";\r\n\r\nconst Button = (props) => (\r\n    <button \r\n        onClick={props.clicked}\r\n        className=\"button is-block is-primary is-fullwidth is-medium\"\r\n    >\r\n        {props.text}\r\n    </button>\r\n);\r\n\r\nexport default Button;","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCBbW-5QrL4J92sFPzCTpO2ZesLrIvISw0\",\r\n    authDomain: \"manal-bbf4e.firebaseapp.com\",\r\n    databaseURL: \"https://manal-bbf4e-default-rtdb.firebaseio.com\",\r\n    projectId: \"manal-bbf4e\",\r\n    storageBucket: \"manal-bbf4e.appspot.com\",\r\n    messagingSenderId: \"1034716497857\",\r\n    appId: \"1:1034716497857:web:a0d6d4f2e27faecb5b5140\",\r\n    measurementId: \"G-8V9LQ2BKLF\"\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\n\r\nexport { db };\r\nexport default firebase;","import axios from \"axios\";\r\nimport { db } from \"../../firebase\";\r\n\r\nexport const loginUser = (email, password) => {\r\n    // console.log(email + ' - ' + password);\r\n    return function(dispatch) {\r\n        dispatch(loginUserStart());\r\n\r\n        const data = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        axios\r\n            .post(\r\n                \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCBbW-5QrL4J92sFPzCTpO2ZesLrIvISw0\",\r\n                data\r\n            )\r\n            .then(result => {\r\n                const token = result.data.idToken;\r\n                const userId = result.data.localId;\r\n                const expiresIn = result.data.expiresIn;\r\n                const expireDate = new Date(new Date().getTime() + expiresIn * 1000);\r\n                const refreshToken = result.data.refreshToken;\r\n                var userRole = null;\r\n                var fname = null;\r\n                var lname = null;\r\n\r\n                db.collection(\"employees\").where(\"uId\", \"==\", userId)\r\n                    .get()\r\n                    .then((querySnapshot) => {\r\n                        querySnapshot.forEach((doc) => {\r\n                            // doc.data() is never undefined for query doc snapshots\r\n                            userRole = doc.data().userRole;\r\n                            fname = doc.data().fname;\r\n                            lname = doc.data().lname;\r\n                            localStorage.setItem(\"userRole\", userRole);\r\n                            localStorage.setItem(\"token\", token);\r\n                            localStorage.setItem(\"userId\", userId);\r\n                            localStorage.setItem(\"expireDate\", expireDate);\r\n                            localStorage.setItem(\"refreshToken\", refreshToken);\r\n                            localStorage.setItem(\"lname\", lname);\r\n                            localStorage.setItem(\"fname\", fname);\r\n\r\n                            dispatch(loginUserSuccess(token, userId, userRole, lname, fname));\r\n                        });\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(\"Error getting documents: \", error);\r\n                    });\r\n\r\n                \r\n                // dispatch(loginUserSuccess(token, userId, userRole));\r\n            })\r\n            .catch(err => {\r\n                dispatch(loginUserError(err));\r\n            });\r\n    };\r\n};\r\n\r\nexport const loginUserStart = () => {\r\n    return {\r\n        type: \"LOGIN_USER_START\"\r\n    };\r\n};\r\n\r\nexport const loginUserSuccess = (token, userId, userRole, lname, fname) => {\r\n    return {\r\n        type: \"LOGIN_USER_SUCCESS\",\r\n        token,\r\n        userId,\r\n        userRole,\r\n        lname,\r\n        fname\r\n    };\r\n};\r\n\r\nexport const loginUserError = (error) => {\r\n    return {\r\n        type: \"LOGIN_USER_ERROR\",\r\n        error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userId\");\r\n    localStorage.removeItem(\"expireDate\");\r\n    localStorage.removeItem(\"refreshToken\");\r\n    localStorage.removeItem(\"userRole\");\r\n    localStorage.removeItem(\"lname\");\r\n    localStorage.removeItem(\"fname\");\r\n    \r\n    return {\r\n        type: \"LOGOUT\"\r\n    };\r\n};\r\n\r\nexport const autoLoginAfterMilSeconds = (ms) => {\r\n    return function(dispatch){\r\n        //alert(Math.floor((ms/1000/60)) + \" минут \" + Math.floor(((ms/1000)%60)) + \" секунд үлдлээ\");\r\n        // token шинэчлэх код\r\n        axios\r\n            .post(\r\n                \"https://securetoken.googleapis.com/v1/token?key=AIzaSyCBbW-5QrL4J92sFPzCTpO2ZesLrIvISw0\", \r\n                {\r\n                    grant_type: \"refresh_token\",\r\n                    refresh_token: localStorage.get(\"refresh_token\")\r\n                }\r\n            )\r\n            .then(result => {\r\n                const token = result.data.idToken;\r\n                const userId = result.data.localId;\r\n                const expiresIn = result.data.expiresIn;\r\n                const expireDate = new Date(new Date().getTime() + expiresIn * 1000);\r\n                const refreshToken = result.data.refreshToken;\r\n\r\n                localStorage.setItem(\"token\", token);\r\n                localStorage.setItem(\"userId\", userId);\r\n                localStorage.setItem(\"expireDate\", expireDate);\r\n                localStorage.setItem(\"refreshToken\", refreshToken);\r\n\r\n                dispatch(loginUserSuccess(token, userId));\r\n            })\r\n            .catch(err => {\r\n                dispatch(loginUserError(err));\r\n            });\r\n        \r\n        \r\n        // автомат logout\r\n        setTimeout(()=>{\r\n            dispatch(logout());\r\n        }, ms);\r\n    };\r\n};","import React from \"react\";\r\nimport css from \"./style.module.css\";\r\n\r\nconst Spinner = () => {\r\n    return (<div className={css.Loader}>\r\n\r\n    </div>);\r\n};\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport Button from '../../components/General/Button';\r\nimport * as actions from '../../redux/actions/loginActions';\r\nimport Spinner from \"../../components/General/Spinner\";\r\nimport { Redirect } from 'react-router-dom';\r\n//import css from \"./style.module.css\";\r\n\r\nconst Login = props => {\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n\r\n  const login = (e) => {\r\n    e.preventDefault();\r\n    props.login(form.email, form.password);\r\n  };\r\n\r\n  const inputRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"columns is-multiline\">\r\n      {props.userId && <Redirect to='/reception' />}\r\n      <div className=\"column is-8 is-offset-2 register\">\r\n        <div className=\"columns\">\r\n          <div className=\"column left\">\r\n            <h1 className=\"title is-1\">МАНАЛ</h1>\r\n            <h2 className=\"subtitle colored is-4\">\r\n              Эмнэлгийн удирдлагын систем\r\n            </h2>\r\n          </div>\r\n          <div className=\"column right has-text-centered\">\r\n            <form>\r\n              <div className=\"field\">\r\n                <div className=\"control\">\r\n                  <input\r\n                    ref={inputRef}\r\n                    onChange={el => setForm(formBefore => ({\r\n                      email: el.target.value,\r\n                      password: formBefore.password\r\n                    }))}\r\n                    className=\"input is-medium\"\r\n                    type=\"email\"\r\n                    placeholder=\"И-мэйл хаяг\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"field\">\r\n                <div className=\"control\">\r\n                  <input\r\n                    onChange={el => setForm(formBefore => ({\r\n                      email: formBefore.email,\r\n                      password: el.target.value\r\n                    }))}\r\n                    className=\"input is-medium\"\r\n                    type=\"password\"\r\n                    placeholder=\"Нууц үг\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {props.authServerError && <div style={{ color: \"red\" }}>{props.authServerError}</div>}\r\n              {props.logginIn && <Spinner />}\r\n              <Button text=\"Нэвтрэх\" clicked={login} />\r\n              <br />\r\n              <small>\r\n                <em>Нууц үгээ мартсан?</em>\r\n              </small>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"column is-8 is-offset-2\">\r\n        <br />\r\n        <nav className=\"level\">\r\n          <div className=\"level-left\">\r\n            <div className=\"level-item\">\r\n              <span className=\"icon\">\r\n                <i className=\"fab fa-twitter\" />\r\n              </span>{\" \"}\r\n               \r\n              <span className=\"icon\">\r\n                <i className=\"fab fa-facebook\" />\r\n              </span>{\" \"}\r\n               \r\n              <span className=\"icon\">\r\n                <i className=\"fab fa-instagram\" />\r\n              </span>{\" \"}\r\n               \r\n              <span className=\"icon\">\r\n                <i className=\"fab fa-github\" />\r\n              </span>{\" \"}\r\n               \r\n              <span className=\"icon\">\r\n                <i className=\"fas fa-envelope\" />\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"level-right\">\r\n            <small\r\n              className=\"level-item\"\r\n              style={{ color: \"var(--textLight)\" }}\r\n            >\r\n              Chandmani Solutions © Зохиогчийн эрхээр хамгаалагдсан 2021\r\n            </small>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    logginIn: state.signupLoginReducer.logginIn,\r\n    authServerError: state.signupLoginReducer.authServerError,\r\n    authServerErrorCode: state.signupLoginReducer.authServerErrorCode,\r\n    userId: state.signupLoginReducer.userId,\r\n    userRole: state.signupLoginReducer.userRole\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    login: (email, password) => dispatch(actions.loginUser(email, password))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/loginActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Logout = (props) => {\r\n    useEffect(() => {\r\n        props.logout();\r\n    }, []);\r\n\r\n    return <Redirect to=\"/\" />;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { useState, useEffect, useRef } from \"react\";\r\nimport css from \"./style.module.css\";\r\n\r\nconst TextBox = props => {\r\n    const [warning, setWarning] = useState();\r\n    const errorMarkRef = useRef();\r\n    const correctMarkRef = useRef();\r\n\r\n    let styles = {\r\n        color: \"red\",\r\n        backgroundColor: \"black\",\r\n        visibility: \"hidden\",\r\n    };\r\n\r\n    useEffect(() => {\r\n        errorMarkRef.current.style.visibility = \"hidden\";\r\n        correctMarkRef.current.style.visibility = \"hidden\";\r\n    }, []);\r\n\r\n    // errorMarkRef.current.style.visibility = \"hidden\";\r\n    // const [errorMark, setErrorMark] = useState(false);\r\n    // const [correctMark, setCorrectMark] = useState(props);\r\n    \r\n    // useEffect(() => {\r\n    //     console.log(\"componentDidMount worked!\", props.genObject);\r\n    // }, []);\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"CHECKING...............\", props.errorMark);\r\n    //     setErrorMark()\r\n    // }, [errorMark, correctMark]);\r\n\r\n    // const warning = \"\"\r\n    const handleChange = e => {\r\n        e.target.value = e.target.value.toUpperCase();\r\n        const { value, name } = e.target;\r\n        \r\n        switch (name) {\r\n            case \"lName\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        lname: value.length<2 && value.length>0 \r\n                            ? \"хамгийн багадаа 2 тэмдэгт оруулна уу\" : \"\"\r\n                    });\r\n                    if(value.length<2 && value.length>0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, lname: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, lname: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, lname: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n                \r\n                props.setComponentInfo({ ...props.componentAllInfo, lname: value });\r\n                break;\r\n            case \"fName\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        fname: value.length<2 && value.length>0 \r\n                            ? \"хамгийн багадаа 2 тэмдэгт оруулна уу\" : \"\"\r\n                    });\r\n                }, 0);\r\n\r\n                if(value.length<2 && value.length>0) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, fname: true });\r\n                    errorMarkRef.current.style.visibility = \"visible\";\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                } else if(value.length === 0) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, fname: true });\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                } else {\r\n                    props.setFormCheck({ ...props.formCheckInfo, fname: false });\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                    correctMarkRef.current.style.visibility = \"visible\";\r\n                }\r\n\r\n                props.setComponentInfo({ ...props.componentAllInfo, fname: value });\r\n                break;\r\n            case \"regNo\": //required input*\r\n                props.setComponentInfo({ ...props.componentAllInfo, regNo: value });\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        regNo: (value.length<10 && value.length>0) || value.length>10\r\n                            ? \"регистрийн дугаараа зөв эсэхийг шалгана уу\" : \"\"\r\n                    });\r\n                }, 0);\r\n\r\n                if((value.length<10 && value.length>0) || value.length>10) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, regNo: true });\r\n                    errorMarkRef.current.style.visibility = \"visible\";\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                } else if(value.length === 0) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, regNo: true });\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                } else {\r\n                    props.setFormCheck({ ...props.formCheckInfo, regNo: false });\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                    correctMarkRef.current.style.visibility = \"visible\";\r\n                };\r\n\r\n                break;\r\n            case \"phoneNo\": //required input*\r\n                props.setComponentInfo({ ...props.componentAllInfo, phoneNo: value });\r\n                setTimeout(() => {\r\n                    props.setWarning({\r\n                        ...props.allwarnings, \r\n                        phoneNo: (value.length<8 && value.length>0) || value.length>8\r\n                            ? \"утасны дугаараа зөв эсэхийг шалгана уу\" : \"\"\r\n                    });\r\n                }, 0);\r\n\r\n                if((value.length<8 && value.length>0) || value.length>8) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, phoneNo: true });\r\n                    errorMarkRef.current.style.visibility = \"visible\";\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                    // console.log(\"change show error mark true\", props.errorMark);\r\n                } else if(value.length === 0) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, phoneNo: true });\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                } else {\r\n                    props.setFormCheck({ ...props.formCheckInfo, phoneNo: false });\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                    correctMarkRef.current.style.visibility = \"visible\";\r\n                    // console.log(\"change show error mark false\", props.errorMark);\r\n                };\r\n                \r\n                break;\r\n            case \"email\":\r\n                props.setComponentInfo({ ...props.componentAllInfo, email: value });\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        // email: value.length<2 && value.length>0 \r\n                        //     ? \"хамгийн багадаа 2 тэмдэгт оруулна уу\" : \"\"\r\n                    });\r\n                }, 0);\r\n\r\n                if(value.length<2 && value.length>0) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, email: true });\r\n                    errorMarkRef.current.style.visibility = \"visible\";\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                } else if(value.length === 0) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, email: true });\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                } else {\r\n                    props.setFormCheck({ ...props.formCheckInfo, email: false });\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                    correctMarkRef.current.style.visibility = \"visible\";\r\n                }\r\n                break;\r\n            case \"khoroo\": //required input*\r\n                props.setComponentInfo({ ...props.componentAllInfo, khoroo: value });\r\n                if(value.length<1 && value.length>0) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, khoroo: true });\r\n                    errorMarkRef.current.style.visibility = \"visible\";\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                } else if(value.length === 0) {\r\n                    props.setFormCheck({ ...props.formCheckInfo, khoroo: true });\r\n                    correctMarkRef.current.style.visibility = \"hidden\";\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                } else {\r\n                    props.setFormCheck({ ...props.formCheckInfo, khoroo: false });\r\n                    errorMarkRef.current.style.visibility = \"hidden\";\r\n                    correctMarkRef.current.style.visibility = \"visible\";\r\n                }\r\n                // props.setWarning({ \r\n                //     ...props.allwarnings, \r\n                //     khoroo: value.length<2 && value.length>0 \r\n                //         ? \"хамгийн багадаа 2 тэмдэгт оруулна уу\" : \"\"\r\n                // });\r\n                break;\r\n            case \"building\":\r\n                props.setComponentInfo({ ...props.componentAllInfo, building: value });\r\n                // props.setFormCheck({ ...props.formCheckInfo, building: true });\r\n                // props.setWarning({ \r\n                //     ...props.allwarnings, \r\n                //     building: value.length<2 && value.length>0 \r\n                //         ? \"хамгийн багадаа 2 тэмдэгт оруулна уу\" : \"\"\r\n                // });\r\n                break;\r\n\r\n            case \"orgRegNo\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        orgRegNo: value.length<7 && value.length>0 \r\n                            ? \"хамгийн багадаа 7 тэмдэгт оруулна уу\" : \"\"\r\n                    });\r\n                    if((value.length<7 && value.length>0) || value.length>7) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, orgRegNo: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, orgRegNo: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, orgRegNo: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n                \r\n                props.setComponentInfo({ ...props.componentAllInfo, orgRegNo: value });\r\n                break;\r\n\r\n            case \"hospitalName\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        hospitalName: value.length<7 && value.length>0 \r\n                            ? \"\" : \"\"\r\n                    });\r\n                    if(value.length<2 && value.length>0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, hospitalName: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, hospitalName: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, hospitalName: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n                \r\n                props.setComponentInfo({ ...props.componentAllInfo, hospitalName: value });\r\n                break;\r\n\r\n            case \"departmentName\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        departmentName: value.length<7 && value.length>0 \r\n                            ? \"\" : \"\"\r\n                    });\r\n                    if(value.length<2 && value.length>0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, departmentName: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, departmentName: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, departmentName: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n                \r\n                props.setComponentInfo({ ...props.componentAllInfo, departmentName: value });\r\n                break;\r\n\r\n            case \"officePhoneNo\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        officePhoneNo: value.length<7 && value.length>0 \r\n                            ? \"\" : \"\"\r\n                    });\r\n                    if(value.length<8 && value.length>0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, officePhoneNo: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, officePhoneNo: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, officePhoneNo: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n                \r\n                props.setComponentInfo({ ...props.componentAllInfo, officePhoneNo: value });\r\n                break;\r\n\r\n            case \"password1\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        password1: value.length<7 && value.length>0 \r\n                            ? \"\" : \"\"\r\n                    });\r\n                    if(value.length<8 && value.length>0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, password1: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, password1: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, password1: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n                \r\n                props.setComponentInfo({ ...props.componentAllInfo, password1: value });\r\n                break;\r\n\r\n            case \"password2\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        password2: value.length<7 && value.length>0 \r\n                            ? \"\" : \"\"\r\n                    });\r\n                    if(value.length<8 && value.length>0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, password2: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, password2: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, password2: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n                \r\n                props.setComponentInfo({ ...props.componentAllInfo, password2: value });\r\n                break;\r\n\r\n            case \"description\":\r\n                props.setComponentInfo({ ...props.componentAllInfo, description: value });\r\n                break;\r\n\r\n            case \"hospEmail\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        hospEmail: value.length<7 && value.length>0 \r\n                            ? \"\" : \"\"\r\n                    });\r\n                    if(value.length<8 && value.length>0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, hospEmail: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, hospEmail: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, hospEmail: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n                \r\n                props.setComponentInfo({ ...props.componentAllInfo, hospEmail: value });\r\n                break;\r\n\r\n            case \"departmentEmail\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        departmentEmail: value.length<7 && value.length>0 \r\n                            ? \"\" : \"\"\r\n                    });\r\n                    if(value.length<8 && value.length>0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, departmentEmail: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, departmentEmail: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, departmentEmail: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n\r\n                props.setComponentInfo({ ...props.componentAllInfo, departmentEmail: value });\r\n                break;\r\n\r\n            case \"departmentPhoneNo\": //required input*\r\n                setTimeout(() => {\r\n                    props.setWarning({ \r\n                        ...props.allwarnings, \r\n                        departmentPhoneNo: value.length<7 && value.length>0 \r\n                            ? \"\" : \"\"\r\n                    });\r\n                    if(value.length<8 && value.length>0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, departmentPhoneNo: true });\r\n                        errorMarkRef.current.style.visibility = \"visible\";\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                    } else if(value.length === 0) {\r\n                        props.setFormCheck({ ...props.formCheckInfo, departmentPhoneNo: true });\r\n                        correctMarkRef.current.style.visibility = \"hidden\";\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                    } else {\r\n                        props.setFormCheck({ ...props.formCheckInfo, departmentPhoneNo: false });\r\n                        errorMarkRef.current.style.visibility = \"hidden\";\r\n                        correctMarkRef.current.style.visibility = \"visible\";\r\n                    }\r\n                }, 0);\r\n                \r\n                props.setComponentInfo({ ...props.componentAllInfo, departmentPhoneNo: value });\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={css.FormControl}>\r\n            <label className={css.Label}>{props.label}</label>\r\n            <div className={css.Container}>\r\n                <div ref={correctMarkRef}>\r\n                    <i className={`${css.IconStyleCorrect} fas fa-check-circle`} />\r\n                </div>\r\n                <div ref={errorMarkRef}>\r\n                    <i className={`${css.IconStyleWrong} fas fa-exclamation-circle`} />\r\n                </div>\r\n                <input name={props.name} value={props.value} onChange={e => {handleChange(e) }} type={props.type} />\r\n            </div>\r\n            {/* <br/> */}\r\n            {/* Correct: {} <br/> */}\r\n            {/* Error: {} */}\r\n            <span className={css.Error}>{props.warning}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextBox;","import React, { useState } from \"react\";\r\nimport Button from \"../General/Button\";\r\nimport TextBox from \"../General/TextBox\";\r\nimport css from \"./style.module.css\";\r\nimport { db } from \"../../firebase\";\r\n\r\nconst CreateHospital = () => {\r\n    const [hospitalInfo, setHospitalInfo] = useState({\r\n        orgRegNo: \"\",\r\n        hospitalName: \"\",\r\n        lname: \"\",\r\n        fname: \"\",\r\n        officePhoneNo: \"\",\r\n        phoneNo: \"\",\r\n        email: \"\",\r\n        hospEmail: \"\",\r\n        password1: \"\",\r\n        password2: \"\",\r\n        createdDate: \"\",\r\n        modifiedDate: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const [formCheck, setFormCheck] = useState({\r\n        // errorMark: { required талбаруудын анхны утга true байх! энэ нь бөглөөгүй шууд submit хийсэн үед алдаа үзүүлэх зорилготой\r\n            orgRegNo: true,\r\n            hospitalName: true,\r\n            lname: true,\r\n            fname: true,\r\n            officePhoneNo: true,\r\n            phoneNo: true,\r\n            hospEmail: true,\r\n            email: true,\r\n            password1: true,\r\n            password2: true,\r\n            description: \"\"\r\n        // },\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({ lname: \"\", fname: \"\" });\r\n\r\n    const submitForm = () => {\r\n        console.log(\"checking the button to register patient\", hospitalInfo);\r\n        console.log(\"checking submit form marks\", formCheck);\r\n        let textLeftWarningForSubmit = \"\";\r\n        let textRightWarningForSubmit = \"\";\r\n            \r\n            // orgRegNo,hospitalName,lname,fname,officePhoneNo,phoneNo,hospEmail,\r\n            // email,password1,password2,description\r\n\r\n        if(formCheck.orgRegNo === true)\r\n            textLeftWarningForSubmit += ` {Байгууллагын Регистр}`;\r\n        if(formCheck.hospitalName === true)\r\n            textLeftWarningForSubmit += ` {Эмнэлэгийн Нэр}`;\r\n        if(formCheck.lname === true)\r\n            textLeftWarningForSubmit += ` {Овог}`;\r\n        if(formCheck.fname === true)\r\n            textLeftWarningForSubmit += ` {Нэр}`;\r\n        if(formCheck.officePhoneNo === true)\r\n            textLeftWarningForSubmit += ` {Оффис Утас}`;\r\n        if(formCheck.phoneNo === true)\r\n            textLeftWarningForSubmit += ` {Дугаар}`;\r\n        if(formCheck.email === true)\r\n            textLeftWarningForSubmit += ` {Имэйл}`;\r\n        if(formCheck.hospEmail === true)\r\n            textLeftWarningForSubmit += ` {Оффис Имэйл}`;\r\n        if(formCheck.password1 === true)\r\n            textLeftWarningForSubmit += ` {Нууц үг1}`;\r\n        if(formCheck.password2 === true)\r\n            textLeftWarningForSubmit += ` {Нууц үг2}`;\r\n\r\n        textRightWarningForSubmit += \" талбаруудыг заавал, үнэн зөв бөглөнө үү!\";\r\n\r\n        if(!formCheck.orgRegNo && !formCheck.hospitalName && \r\n            !formCheck.lname && !formCheck.fname && \r\n            !formCheck.officePhoneNo && \r\n            !formCheck.phoneNo && !formCheck.email && \r\n            !formCheck.hospEmail && !formCheck.password1 && \r\n            !formCheck.password2 && (hospitalInfo.password1 === hospitalInfo.password2)) {\r\n            //Форм баталгаажсан бүртгэл хийгдэх хэсэг\r\n            var hospitalDocRef = db.collection(\"hospitals\").doc();\r\n            hospitalDocRef.set({\r\n                hospitalRegId: hospitalDocRef.id,\r\n                orgRegNo: hospitalInfo.orgRegNo,\r\n                hospitalName: hospitalInfo.hospitalName,\r\n                lname: hospitalInfo.lname,\r\n                fname: hospitalInfo.fname,\r\n                officePhoneNo: hospitalInfo.officePhoneNo,\r\n                phoneNo: hospitalInfo.phoneNo,\r\n                email: hospitalInfo.email,\r\n                hospEmail: hospitalInfo.hospEmail,\r\n                createdDate: new Date(),\r\n                modifiedDate: new Date(),\r\n                password1: hospitalInfo.password1,\r\n                password2: hospitalInfo.password2\r\n            }).then(() => {\r\n                alert(\"Эмнэлэгийг амжилттай бүртгэлээ!\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"БҮРТГЭХЭД АЛДАА ГАРЛАА!\");\r\n            });\r\n        } else {\r\n            alert(textLeftWarningForSubmit + textRightWarningForSubmit);\r\n        }\r\n\r\n        if(hospitalInfo.password1 !== hospitalInfo.password2)\r\n            alert(\"Нууц үгүүд хоорондоо таарахгүй байна!\");\r\n\r\n        textLeftWarningForSubmit = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={css.Container}>\r\n            {/* <TextBox \r\n                label=\"Овог*\" \r\n                name=\"lName\" \r\n                setComponentInfo={setPatientInfo} \r\n                componentInfo={patientInfo['lname']} \r\n                componentAllInfo={patientInfo} \r\n                setWarning={setFormErrors} \r\n                warning={formErrors['lname']} \r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} /> */}\r\n            <TextBox\r\n                label=\"Байгууллагын Регистр\"\r\n                name=\"orgRegNo\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"orgRegNo\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"orgRegNo\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <TextBox\r\n                label=\"Эмнэлэгийн нэр\"\r\n                name=\"hospitalName\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"hospitalName\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"hospitalName\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <TextBox\r\n                label=\"Овог\"\r\n                name=\"lName\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"lname\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"lname\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <TextBox\r\n                label=\"Нэр\"\r\n                name=\"fName\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"fname\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"fname\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <TextBox\r\n                label=\"Ажилтны Гар Утас\"\r\n                name=\"phoneNo\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"phoneNo\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"phoneNo\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            <TextBox\r\n                label=\"Оффисийн Утас\"\r\n                name=\"officePhoneNo\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"officePhoneNo\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"officePhoneNo\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <TextBox\r\n                label=\"Ажилтны Имэйл\"\r\n                name=\"email\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"email\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"email\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            <TextBox\r\n                label=\"Оффисийн Имэйл\"\r\n                name=\"hospEmail\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"hospEmail\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"hospEmail\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <TextBox\r\n                label=\"Нууц үг\"\r\n                name=\"password1\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"password1\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"password1\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck}\r\n                type=\"password\" />\r\n            \r\n            <TextBox\r\n                label=\"Нууц үг давтах\"\r\n                name=\"password2\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"password2\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"password2\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck}\r\n                type=\"password\" />\r\n            \r\n            {/* <TextBox\r\n                label=\"Хэрэглэгчийн эрх\"\r\n                name=\"orgRegNo\"\r\n                setComponentInfo={}\r\n                componentInfo={}\r\n                componentAllInfo={}\r\n                setWarning={}\r\n                warning={}\r\n                allwarnings={}\r\n                setFormCheck={}\r\n                formCheckInfo={} /> */}\r\n            <TextBox\r\n                label=\"Тайлбар\"\r\n                name=\"description\"\r\n                setComponentInfo={setHospitalInfo}\r\n                componentInfo={hospitalInfo[\"description\"]}\r\n                componentAllInfo={hospitalInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"description\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            <br/><br/>\r\n            <Button text=\"Бүртгэх\" clicked={submitForm} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateHospital;","import React, { useEffect, useRef } from \"react\";\r\nimport css from \"./style.module.css\";\r\nimport Select from \"react-select\";\r\nimport AsyncSelect from \"react-select/async\";\r\n\r\nconst SelectComponent = props => {\r\n    const customStyles = {\r\n        menu: (provided) => ({\r\n            ...provided,\r\n            borderBottom: '1px dotted pink',\r\n            padding: 10,\r\n        }),\r\n        \r\n        // control: (_, { selectProps: { width }}) => ({\r\n        //     width: width\r\n        // }),\r\n        control: base => ({\r\n            ...base,\r\n            width: \"100%\",\r\n            borderColor: \"green\",\r\n            \"&:active\": {\r\n                borderColor: \"green\",\r\n            },\r\n            \"&:hover\": {\r\n                borderColor: \"green\",\r\n                color: \"purple\"\r\n            }\r\n        }),\r\n\r\n        container: base => ({\r\n            ...base,\r\n            marginTop: \"3px\",\r\n            width: \"100%\",\r\n            marginBottom: \"10px\",\r\n        }),\r\n    \r\n        singleValue: base => ({\r\n            ...base,\r\n            width: \"100%\",\r\n            color: \"inherit\"\r\n        })\r\n    };\r\n\r\n    const errorMarkRef = useRef();\r\n    const correctMarkRef = useRef();\r\n    const selectComponentRef = useRef(); \r\n\r\n    useEffect(() => {\r\n        errorMarkRef.current.style.visibility = \"hidden\";\r\n        correctMarkRef.current.style.visibility = \"hidden\";\r\n    }, []);\r\n\r\n    const onChange = (e) => {\r\n        if(e.value.length>0) {\r\n            correctMarkRef.current.style.visibility = \"visible\";\r\n            console.log(e.value, e.componentLabel);\r\n            switch(e.componentLabel) {\r\n                case \"patientCitizenship\":\r\n                    props.setComponentInfo({ ...props.componentAllInfo, citizenship: e.value });\r\n                    props.setFormCheck({ ...props.formCheckInfo, citizenship: false });\r\n                    break;\r\n                \r\n                case \"patientGender\":\r\n                    props.setComponentInfo({ ...props.componentAllInfo, gender: e.value });\r\n                    props.setFormCheck({ ...props.formCheckInfo, gender: false });\r\n                    break;\r\n\r\n                case \"city\":\r\n                    props.setComponentInfo({ ...props.componentAllInfo, city: e.value });\r\n                    props.setFormCheck({ ...props.formCheckInfo,  city: false });\r\n                    break;\r\n\r\n                case \"district\":\r\n                    props.setComponentInfo({ ...props.componentAllInfo, district: e.value });\r\n                    props.setFormCheck({ ...props.formCheckInfo, district: false });\r\n                    break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n            // props.setPatientInfo({ ...props.patientAllInfo, lname: value });\r\n        } else {\r\n            correctMarkRef.current.style.visibility = \"hidden\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={css.FormControl}>\r\n            <label className={css.Label}>{props.label}</label>\r\n            <div className={css.Container}>\r\n                <div ref={correctMarkRef}>\r\n                    <i className={`${css.IconStyleCorrect} fas fa-check-circle`} />\r\n                </div>\r\n                <div ref={errorMarkRef}>\r\n                    <i className={`${css.IconStyleWrong} fas fa-exclamation-circle`} />\r\n                </div>\r\n                \r\n                {/* <AsyncSelect */}\r\n                <Select \r\n                    ref={selectComponentRef}\r\n                    // ref={props.ref1}\r\n                    styles={customStyles}\r\n                    defaultValue={props.value}\r\n                    onChange={e => {props.onchangefunc(e); onChange(e) }} \r\n                    options={props.options} />\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SelectComponent;","import React, { useState, useEffect } from \"react\";\r\nimport css from \"./style.module.css\";\r\nimport TextBox from \"../../components/General/TextBox\";\r\nimport { db } from \"../../firebase\";\r\nimport SelectComponent from \"../../components/General/SelectComponent\";\r\nimport Button from \"../General/Button\";\r\n\r\nconst CreateDepartment = () => {\r\n    const [departmentInfo, setDepartmentInfo] = useState({\r\n        departmentName: \"\",\r\n        phoneNo: \"\",\r\n        departmentPhoneNo: \"\",\r\n        email: \"\",\r\n        departmentEmail: \"\",\r\n        createdDate: \"\",\r\n        modifiedDate: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const [employeeInfo, setEmployeeInfo] = useState({\r\n        email: \"\",\r\n        lname: \"\",\r\n        fname: \"\",\r\n        regNo: \"\",\r\n        phoneNo: \"\",\r\n        userRole: \"\",\r\n        password1: \"\",\r\n        password2: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    const optionsUserRole = [\r\n        {value: \"admin\", label: \"Админ\"},\r\n        {value: \"reception\", label: \"Ресепшн\"},\r\n        {value: \"doctor\", label: \"Эмч\"}\r\n    ];\r\n\r\n    const optionsHospitals = [];\r\n    const optionsEmployees = [];\r\n\r\n    const [formCheck, setFormCheck] = useState({\r\n        // errorMark: { required талбаруудын анхны утга true байх! энэ нь бөглөөгүй шууд submit хийсэн үед алдаа үзүүлэх зорилготой\r\n        departmentName: true,\r\n        phoneNo: true,\r\n        departmentPhoneNo: true,\r\n        email: true,\r\n        departmentEmail: true\r\n        // },\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({ lname: \"\", fname: \"\" });\r\n    const [hospitals, setHospitals] = useState([]);\r\n    const [employees, setEmployees] = useState([]);\r\n    const tempStorageHospital = [];\r\n    const tempStorageEmployee = [];\r\n\r\n    const fetchData = async () => {\r\n        let hospitalsRef = db.collection(\"hospitals\")\r\n        let employeesRef = db.collection(\"employees\")\r\n        let dataRefHospital = await hospitalsRef.get();\r\n        let dataRefEmployee = await employeesRef.get();\r\n\r\n        dataRefHospital.docs.map(hospital => {\r\n            let currentID = hospital.id;\r\n            let dateCreated = hospital.data().createdDate.toDate();\r\n            let dateModified = hospital.data().modifiedDate.toDate();\r\n            dateCreated = dateCreated.getUTCDate()+\"/\"+(dateCreated.getMonth()+1)+\"/\"+dateCreated.getUTCFullYear();\r\n            dateModified = dateModified.getUTCDate()+\"/\"+(dateModified.getMonth()+1)+\"/\"+dateModified.getUTCFullYear();\r\n            let dataStorage = { \r\n                ...hospital.data(), \r\n                ['id']: currentID, \r\n                ['createdDateFormatted']: dateCreated,\r\n                ['modifiedDateFormatted']: dateModified,\r\n            };\r\n            tempStorageHospital.push(dataStorage);\r\n        });\r\n\r\n        dataRefEmployee.docs.map(employee => {\r\n            let currentID = employee.id;\r\n            let dateCreated = employee.data().createdDate.toDate();\r\n            let dateModified = employee.data().modifiedDate.toDate();\r\n            dateCreated = dateCreated.getUTCDate()+\"/\"+(dateCreated.getMonth()+1)+\"/\"+dateCreated.getUTCFullYear();\r\n            dateModified = dateModified.getUTCDate()+\"/\"+(dateModified.getMonth()+1)+\"/\"+dateModified.getUTCFullYear();\r\n            let dataStorage = { \r\n                ...employee.data(), \r\n                ['id']: currentID, \r\n                ['createdDateFormatted']: dateCreated,\r\n                ['modifiedDateFormatted']: dateModified,\r\n            };\r\n            tempStorageEmployee.push(dataStorage);\r\n        });\r\n\r\n        setHospitals(tempStorageHospital);\r\n        setEmployees(tempStorageEmployee);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    hospitals.map(el => {\r\n        // console.log(\"haha\", el.id, el.orgRegNo, el.hospitalName);\r\n        optionsHospitals.push({\r\n            value: el.id, \r\n            label: el.hospitalName \r\n        });\r\n    });\r\n\r\n    employees.map(el => {\r\n        // console.log(\"hoho\", el.lname, el.fname, el.id);\r\n        optionsEmployees.push({\r\n            value: el.id, \r\n            label: (el.lname.substring(0,1)+\".\"+el.fname) \r\n        });\r\n    })\r\n\r\n    // console.log(\"options Employees\", optionsEmployees);\r\n\r\n    const submitForm = e => {\r\n        // console.log(\"checking the button to register patient\", patientCitizenship, patientLname, patientFname, patientRegno, patientPhoneNo, patientCity, patientDistrict, patientKhoroo, patientBuilding);\r\n        \r\n        let textLeftWarningForSubmit = \"\";\r\n        let textRightWarningForSubmit = \"\";\r\n\r\n        if(formCheck.departmentName === true)\r\n            textLeftWarningForSubmit += ` {Тасгийн нэр}`;\r\n        if(formCheck.phoneNo === true)\r\n            textLeftWarningForSubmit += ` {Утас}`;\r\n        if(formCheck.departmentPhoneNo === true)\r\n            textLeftWarningForSubmit += ` {Тасгийн Утас}`;\r\n        if(formCheck.email === true)\r\n            textLeftWarningForSubmit += ` {Имэйл}`;\r\n        if(formCheck.departmentEmail === true)\r\n            textLeftWarningForSubmit += ` {Тасгийн Имэйл}`;\r\n\r\n        textRightWarningForSubmit += \" талбаруудыг заавал, үнэн зөв бөглөнө үү!\";\r\n    \r\n        // var patientId = db.collection(\"patients\").doc().;\r\n\r\n        // console.log(departmentInfo);\r\n\r\n        if(!formCheck.departmentName && (!formCheck.phoneNo || \r\n            !formCheck.officePhoneNo) && (!formCheck.email || \r\n            !formCheck.departmentEmail)) {\r\n            //Форм баталгаажсан бүртгэл хийгдэх хэсэг\r\n            var departmentDocRef = db.collection(\"departments\").doc();\r\n            departmentDocRef.set({\r\n                departmentId: departmentDocRef.id,\r\n                departmentName: departmentInfo.departmentName,\r\n                departmentPhoneNo: departmentInfo.departmentPhoneNo,\r\n                phoneNo: departmentInfo.phoneNo,\r\n                departmentEmail: departmentInfo.departmentEmail,\r\n                email: departmentInfo.email,\r\n                createdDate: new Date(),\r\n                modifiedDate: new Date(),\r\n                description: \"\"\r\n            }).then(() => {\r\n                alert(\"Тасгийг амжилттай бүртгэлээ!\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"БҮРТГЭХЭД АЛДАА ГАРЛАА!\");\r\n            });\r\n        } else {\r\n            alert(textLeftWarningForSubmit + textRightWarningForSubmit);\r\n        }\r\n\r\n        textLeftWarningForSubmit = \"\";\r\n    };\r\n\r\n    return (\r\n        <div className={css.Container}>\r\n            <SelectComponent label=\"Эмнэлэг сонгох\" options={optionsHospitals} onchangefunc={(e) => {setEmployeeInfo({...employeeInfo, userRole: e.value})}} />\r\n\r\n            <TextBox \r\n                label=\"Тасгийн нэр\"\r\n                name=\"departmentName\"\r\n                setComponentInfo={setDepartmentInfo}\r\n                componentInfo={departmentInfo[\"departmentName\"]}\r\n                componentAllInfo={departmentInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"departmentName\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            {/* <TextBox \r\n                label=\"Гар утас\"\r\n                name=\"phoneNo\"\r\n                setComponentInfo={setDepartmentInfo}\r\n                componentInfo={departmentInfo[\"phoneNo\"]}\r\n                componentAllInfo={departmentInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"phoneNo\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} /> */}\r\n            \r\n            <TextBox \r\n                label=\"Тасгийн Утас\"\r\n                name=\"departmentPhoneNo\"\r\n                setComponentInfo={setDepartmentInfo}\r\n                componentInfo={departmentInfo[\"departmentPhoneNo\"]}\r\n                componentAllInfo={departmentInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"departmentPhoneNo\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            {/* <TextBox \r\n                label=\"Имэйл\"\r\n                name=\"email\"\r\n                setComponentInfo={setDepartmentInfo}\r\n                componentInfo={departmentInfo[\"email\"]}\r\n                componentAllInfo={departmentInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"email\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} /> */}\r\n\r\n            <TextBox \r\n                label=\"Тасгийн Имэйл\"\r\n                name=\"departmentEmail\"\r\n                setComponentInfo={setDepartmentInfo}\r\n                componentInfo={departmentInfo[\"departmentEmail\"]}\r\n                componentAllInfo={departmentInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"departmentEmail\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            <SelectComponent label=\"Тасгийн эрхлэгч\" options={optionsEmployees} onchangefunc={(e) => {setEmployeeInfo({...employeeInfo, userRole: e.value})}} />\r\n\r\n            <TextBox \r\n                label=\"Тайлбар\"\r\n                name=\"description\"\r\n                setComponentInfo={setDepartmentInfo}\r\n                componentInfo={departmentInfo[\"description\"]}\r\n                componentAllInfo={departmentInfo} />\r\n\r\n            <br/><br/>\r\n            <Button text=\"Тасгийг бүртгэх\" clicked={submitForm} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateDepartment;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n// import AppointmentContainer from '../../components/AppointmentContainer';\r\n// import css from \"./style.module.css\";\r\n\r\nconst Home = props => {\r\n    return (\r\n        <>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.signupLoginReducer.userId,\r\n        userRole: state.signupLoginReducer.userRole\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);","import axios from \"axios\";\r\nimport { db } from \"../../firebase\";\r\n\r\nexport const signupUser = ( uId, \r\n                            email, \r\n                            password, \r\n                            lname, \r\n                            fname, \r\n                            regNo, \r\n                            phoneNo, \r\n                            description, \r\n                            userRole,\r\n                            createdDate, \r\n                            modifiedDate\r\n                        ) => {\r\n    return function(dispatch) {\r\n        dispatch(signupUserStart());\r\n\r\n        const data = {\r\n            uId,\r\n            email,\r\n            password,\r\n            lname,\r\n            fname,\r\n            regNo,\r\n            phoneNo,\r\n            description,\r\n            userRole,\r\n            createdDate,\r\n            modifiedDate,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        db.collection(\"employees\").doc(uId).set({\r\n            uId,\r\n            email,\r\n            password,\r\n            lname,\r\n            fname,\r\n            regNo,\r\n            phoneNo,\r\n            description,\r\n            userRole,\r\n            createdDate,\r\n            modifiedDate,\r\n            returnSecureToken: true\r\n        });\r\n\r\n        axios\r\n            .post(\r\n                \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCBbW-5QrL4J92sFPzCTpO2ZesLrIvISw0\",\r\n                data\r\n            )\r\n            .then(result => {\r\n                const token = result.data.idToken;\r\n                const userId = result.data.localId;\r\n                const expiresIn = result.data.expiresIn;\r\n                const expireDate = new Date(new Date().getTime() + expiresIn * 1000);\r\n                const refreshToken = result.data.refreshToken;\r\n\r\n                localStorage.setItem(\"token\", token);\r\n                localStorage.setItem(\"userId\", userId);\r\n                localStorage.setItem(\"expireDate\", expireDate);\r\n                localStorage.setItem(\"refreshToken\", refreshToken);\r\n                localStorage.setItem(\"userRole\", userRole);\r\n                localStorage.setItem(\"lname\", lname);\r\n                localStorage.setItem(\"fname\", fname);\r\n\r\n                dispatch(signupUserSuccess(token, userId, userRole, lname, fname));\r\n            })\r\n            .catch(err => {\r\n                dispatch(signupUserError(err));\r\n            });\r\n    };\r\n};\r\n\r\nexport const signupUserStart = () => {\r\n    return {\r\n        type: \"SIGNUP_USER_START\"\r\n    };\r\n};\r\n\r\nexport const signupUserSuccess = (token, userId, userRole, lname, fname) => {\r\n    return {\r\n        type: \"SIGNUP_USER_SUCCESS\",\r\n        token,\r\n        userId,\r\n        userRole,\r\n        lname,\r\n        fname\r\n    };\r\n};\r\n\r\nexport const signupUserError = (error) => {\r\n    return {\r\n        type: \"SIGNUP_USER_ERROR\",\r\n        error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: \"LOGOUT\"\r\n    };\r\n};","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport Button from '../../components/General/Button';\r\nimport * as actions from '../../redux/actions/signupActions';\r\nimport Spinner from \"../../components/General/Spinner\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport firebase from \"../../firebase\";\r\nimport css from \"./style.module.css\";\r\nimport TextBox from '../../components/General/TextBox';\r\nimport SelectComponent from '../../components/General/SelectComponent';\r\n//import css from \"./style.module.css\";\r\n\r\nconst Signup = props => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password1, setPassword1] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [lname, setLname] = useState(\"\");\r\n    const [fname, setFname] = useState(\"\");\r\n    const [regNo, setRegNo] = useState(\"\");\r\n    const [phoneNo, setPhoneNo] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [userRole, setUserRole] = useState(\"\");\r\n    // const [createdDate, setCreatedDate] = useState(\"\");\r\n    // const [modifiedDate, setModifiedDate] = useState(\"\");\r\n    const optionsUserRole = [\r\n        {value: \"admin\", label: \"Админ\"},\r\n        {value: \"reception\", label: \"Ресепшн\"},\r\n        {value: \"doctor\", label: \"Эмч\"}\r\n    ];\r\n\r\n    const [employeeInfo, setEmployeeInfo] = useState({\r\n        email: \"\",\r\n        lname: \"\",\r\n        fname: \"\",\r\n        regNo: \"\",\r\n        phoneNo: \"\",\r\n        userRole: \"\",\r\n        password1: \"\",\r\n        password2: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    const [formCheck, setFormCheck] = useState({\r\n        // errorMark: { required талбаруудын анхны утга true байх! энэ нь бөглөөгүй шууд submit хийсэн үед алдаа үзүүлэх зорилготой\r\n        email: true,\r\n        lname: true,\r\n        fname: true,\r\n        regNo: true,\r\n        phoneNo: true,\r\n        userRole: true,\r\n        password1: true,\r\n        password2: true,\r\n        description: \"\",\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({ lname: \"\", fname: \"\" });\r\n\r\n    const asyncGetData = async () => {\r\n        const currentDate = new Date();\r\n\r\n        firebase\r\n            .auth()\r\n            .createUserWithEmailAndPassword(employeeInfo.email, employeeInfo.password1)\r\n            .then((user) => {\r\n                console.log(\"3. inside of fb function!\");\r\n                resetInput();\r\n                props.signupUser(\r\n                    user.user.uid, \r\n                    employeeInfo.email, \r\n                    employeeInfo.password1, \r\n                    employeeInfo.lname, \r\n                    employeeInfo.fname, \r\n                    employeeInfo.regNo, \r\n                    employeeInfo.phoneNo, \r\n                    employeeInfo.description, \r\n                    employeeInfo.userRole, \r\n                    currentDate, \r\n                    currentDate\r\n                );\r\n            })\r\n            .then(() => {\r\n                console.log(\"Appointment time successfuly written!\");\r\n                alert(\"Бүртгэл амжилттай\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const submit = (e) => {\r\n        console.log(\"1. abc\", employeeInfo);\r\n        console.log(\"pass1\", employeeInfo.password1);\r\n        console.log(\"pass2\", employeeInfo.password2);\r\n\r\n        if(employeeInfo.password1 === employeeInfo.password2) {\r\n            console.log(\"2. inside of if\");\r\n            asyncGetData();\r\n        } else {\r\n            setError(\"Нууц үгнүүд хоорондоо таарахгүй байна\");\r\n        }\r\n\r\n        console.log(error);\r\n        console.log(error.error);\r\n    };\r\n\r\n    const resetInput = () => {\r\n        alert(\"resetInput worked!\");\r\n        console.log(\"4. resetInput worked!\");\r\n        setEmployeeInfo({...employeeInfo, email: \"\"});\r\n        setEmployeeInfo({...employeeInfo, password1: \"\"});\r\n        setEmployeeInfo({...employeeInfo, password2: \"\"});\r\n        setEmployeeInfo({...employeeInfo, lname: \"\"});\r\n        setEmployeeInfo({...employeeInfo, fname: \"\"});\r\n        setEmployeeInfo({...employeeInfo, regNo: \"\"});\r\n        setEmployeeInfo({...employeeInfo, phoneNo: \"\"});\r\n        setEmployeeInfo({...employeeInfo, description: \"\"});\r\n    };\r\n\r\n    const onChange = e => {\r\n        // console.log(\"testing select change: \", e.value, userRole);\r\n    };\r\n\r\n    var jumpPage = null;\r\n    \r\n    if(props.userId) {\r\n        switch(props.userRole) {\r\n            case \"doctor\" :\r\n                jumpPage = <Redirect to='/doctor' />;\r\n                break;\r\n\r\n            case \"reception\" :\r\n                jumpPage = <Redirect to='/reception' />;\r\n                break;\r\n\r\n            default:\r\n                jumpPage = <Redirect to='/home' />;\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className={css.Container}>\r\n            {/* {\r\n                (jumpPage !== null) ? jumpPage : \"\"\r\n\r\n            } */}\r\n\r\n            <TextBox \r\n                label=\"Имэйл\" \r\n                name=\"email\"\r\n                type=\"email\"\r\n                setComponentInfo={setEmployeeInfo}\r\n                componentInfo={employeeInfo[\"email\"]}\r\n                componentAllInfo={employeeInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"email\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            <TextBox \r\n                label=\"Овог\"\r\n                name=\"lName\"\r\n                setComponentInfo={setEmployeeInfo}\r\n                componentInfo={employeeInfo[\"lname\"]}\r\n                componentAllInfo={employeeInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"lname\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            <TextBox \r\n                label=\"Нэр\" \r\n                name=\"fName\" \r\n                setComponentInfo={setEmployeeInfo}\r\n                componentInfo={employeeInfo[\"fname\"]}\r\n                componentAllInfo={employeeInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"fname\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            <TextBox \r\n                label=\"Регистрийн дугаар\" \r\n                name=\"regNo\"\r\n                setComponentInfo={setEmployeeInfo}\r\n                componentInfo={employeeInfo[\"regNo\"]}\r\n                componentAllInfo={employeeInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"regNo\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            <TextBox \r\n                label=\"Утас\" \r\n                name=\"phoneNo\"\r\n                setComponentInfo={setEmployeeInfo}\r\n                componentInfo={employeeInfo[\"phoneNo\"]}\r\n                componentAllInfo={employeeInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"phoneNo\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            <SelectComponent label=\"Хэрэглэгчийн эрх\" options={optionsUserRole} onchangefunc={(e) => {setEmployeeInfo({...employeeInfo, userRole: e.value}); onChange(e)}} />\r\n            <TextBox \r\n                label=\"Тайлбар\" \r\n                name=\"description\"\r\n                setComponentInfo={setEmployeeInfo}\r\n                componentInfo={employeeInfo[\"description\"]}\r\n                componentAllInfo={employeeInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"description\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            <TextBox \r\n                label=\"Нууц үг\" \r\n                name=\"password1\" \r\n                type=\"password\"\r\n                setComponentInfo={setEmployeeInfo}\r\n                componentInfo={employeeInfo[\"password1\"]}\r\n                componentAllInfo={employeeInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"password1\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            <TextBox \r\n                label=\"Нууц үг давтах\" \r\n                name=\"password2\"\r\n                type=\"password\"\r\n                setComponentInfo={setEmployeeInfo}\r\n                componentInfo={employeeInfo[\"password2\"]}\r\n                componentAllInfo={employeeInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors[\"password2\"]}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            <br/><br/>\r\n            {props.authServerError && <div style={{ color: \"red\" }}>{props.authServerError}</div>}\r\n            {props.saving && <Spinner />}\r\n            <Button text=\"Бүртгүүлэх\" clicked={submit} />\r\n            <br />\r\n            {/* <small>\r\n                <em>Нууц үгээ мартсан?</em>\r\n            </small> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        saving: state.signupLoginReducer.saving,\r\n        authServerError: state.signupLoginReducer.authServerError,\r\n        authServerErrorCode: state.signupLoginReducer.authServerErrorCode,\r\n        userId: state.signupLoginReducer.userId,\r\n        userRole: state.signupLoginReducer.userRole\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signupUser: (   uId,\r\n                        email, \r\n                        password, \r\n                        lname, \r\n                        fname, \r\n                        regNo, \r\n                        phoneNo, \r\n                        description, \r\n                        userRole,\r\n                        createdDate, \r\n                        modifiedDate\r\n                    ) => \r\n            dispatch(actions.signupUser(uId,\r\n                                        email, \r\n                                        password, \r\n                                        lname, \r\n                                        fname, \r\n                                        regNo, \r\n                                        phoneNo, \r\n                                        description, \r\n                                        userRole,\r\n                                        createdDate, \r\n                                        modifiedDate))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\r\n// export default Signup;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"../firebase.js\";\r\nimport Spinner from \"../components/General/Spinner\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ( props ) => {\r\n\tconst [currentUser, setCurrentUser] = useState(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.auth().onAuthStateChanged((user) => {\r\n\t\t\tsetCurrentUser(user);\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tif(loading) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\t// display: \"flex\",\r\n\t\t\t\t\t// alignItems: \"center\",\r\n\t\t\t\t\t// justifyContent: \"center\",\r\n\t\t\t\t\t// height: \"80vh\",\r\n\t\t\t\t\t// backgroundColor: \"red\",\r\n\t\t\t\t\tdisplay: \"block\",\r\n\t\t\t\t\tposition: \"fixed\",\r\n\t\t\t\t\tzIndex: \"1031\",\r\n\t\t\t\t\ttop: \"30%\",\r\n\t\t\t\t\tright: \"50%\",\r\n\t\t\t\t\tmarginTop: \"-..px\"\r\n\t\t\t\t\t// left: \"1000px\",\r\n\t\t\t\t\t// left: \"500px\",\r\n\t\t\t\t\t// marginLeft: \"-4em\"\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{/* <h1>Loading User...</h1> */}\r\n                <Spinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tcurrentUser\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{props.children}\r\n\t\t</AuthContext.Provider>\r\n\t);\r\n};","import React from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport css from \"./style.module.css\";\r\n\r\nconst AsyncSelectComponent = props => {\r\n    const customStyles = {\r\n        \r\n        // control: (_, { selectProps: { width }}) => ({\r\n        //     width: width\r\n        // }),\r\n        control: base => ({\r\n            ...base,\r\n            width: \"100%\",\r\n            borderColor: \"green\",\r\n            \"&:active\": {\r\n                borderColor: \"green\",\r\n            },\r\n            \"&:hover\": {\r\n                borderColor: \"green\",\r\n                color: \"purple\"\r\n            }\r\n        }),\r\n\r\n        container: base => ({\r\n            ...base,\r\n            marginTop: \"3px\",\r\n            width: \"100%\",\r\n            marginBottom: \"10px\",\r\n        }),\r\n    \r\n        singleValue: base => ({\r\n            ...base,\r\n            width: \"100%\",\r\n            color: \"inherit\"\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className={css.FormControl}>\r\n            <label className={css.Label}>{props.label}</label>\r\n            <div className={css.Container}>\r\n                <AsyncSelect defaultOptions={props.optionsUserRole} styles={customStyles} value={props.defaultValue} onChange={props.changeUserRole} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AsyncSelectComponent;","import React, { useEffect, useState } from \"react\";\r\nimport css from \"./style.module.css\";\r\nimport { db } from \"../../firebase\";\r\nimport Button from \"../../components/General/Button\";\r\nimport TextBox from \"../General/TextBox\";\r\nimport SelectComponent from \"../General/SelectComponent\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport AsyncSelectComponent from \"../../components/General/AsyncSelectComponent\";\r\n// import firebase from \"firebase/app\";\r\n\r\nconst Profile = props => {\r\n    // alert(props.location.state.userId);\r\n    const [email, setEmail] = useState();\r\n    const [lname, setLname] = useState();\r\n    const [fname, setFname] = useState();\r\n    const [userRole, setUserRole] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [createdDate, setCreatedDate] = useState();\r\n    const [modifiedDate, setModifiedDate] = useState();\r\n    const [phoneNo, setPhoneNo] = useState();\r\n    const [regNo, setRegNo] = useState();\r\n    const [defaultValue, setDefaultValue] = useState();\r\n    const optionsUserRole = [\r\n        // <option value=\"admin\">Админ</option>\r\n        // <option value=\"reception\">Ресепшн</option>\r\n        // <option value=\"doctor\">Эмч</option>\r\n        {value: \"admin\", label: \"Админ\"},\r\n        {value: \"reception\", label: \"Ресепшн\"},\r\n        {value: \"doctor\", label: \"Эмч\"}\r\n    ];\r\n\r\n    const optionsTest = [\r\n        {value: \"haha\", label: \"hoho\"}\r\n    ];\r\n\r\n    const asyncGetData = async () => {\r\n        db.collection(\"employees\").where(\"uId\", \"==\", props.location.state.userId).get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                // doc.data() is never undefined for query doc snapshots\r\n                setEmail(doc.data().email);\r\n                setLname(doc.data().lname);\r\n                setFname(doc.data().fname);\r\n                setUserRole(doc.data().userRole);\r\n                setDescription(doc.data().description);\r\n                setCreatedDate(new Date(doc.data().createdDate.toDate()).toLocaleDateString(\"en-US\"));\r\n                setModifiedDate(new Date(doc.data().modifiedDate.toDate()).toLocaleDateString(\"en-US\"));\r\n                setPhoneNo(doc.data().phoneNo);\r\n                setRegNo(doc.data().regNo);\r\n                setDefaultValue(optionsUserRole.filter(d => d.value.includes(doc.data().userRole))[0]);\r\n                // console.log(defaultValue);\r\n                // console.log(userRole);\r\n                console.log(doc.data().userRole);\r\n                console.log(optionsUserRole.filter(d => d.value.includes(doc.data().userRole))[0]);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"Error getting documents: \", error);\r\n        })\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        asyncGetData();\r\n    }, []);\r\n\r\n    const updateProfile = e => {\r\n        // e.preventDefault();\r\n\r\n        db.collection(\"employees\").doc(props.location.state.userId).update({\r\n            lname: lname,\r\n            fname: fname,\r\n            userRole: userRole,\r\n            description: description,\r\n            phoneNo: phoneNo,\r\n            regNo: regNo\r\n        })\r\n        .then(() => {\r\n            alert(\"Updated!!!\");\r\n        })\r\n        .catch((error) => {\r\n            alert(\"error occured!!!\");\r\n        })\r\n    };\r\n\r\n    const changeUserRole = el => {\r\n        // console.log(\"hahaha\", el);\r\n        setUserRole(el.value);\r\n    };\r\n\r\n    const changeEmail = el => {\r\n        console.log(\"email change\", el.target);\r\n        setEmail(el.target.value);\r\n    }\r\n\r\n    const changeLname = el => {\r\n        console.log(\"object\", el.target.value);\r\n        setLname(el.target.value);\r\n    };\r\n\r\n    const changeFname = el => {\r\n        setFname(el.value);\r\n    };\r\n\r\n    const changeDescription = el => {\r\n        setDescription(el.value);\r\n    };\r\n\r\n    const changePhoneNo = el => {\r\n        setPhoneNo(el.value);\r\n    };\r\n\r\n    const changeRegNo = el => {\r\n        setRegNo(el.value);\r\n    };\r\n\r\n    const promiseOptions = (inputValue) =>\r\n        new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, 1000);\r\n        });\r\n\r\n    return (\r\n        <div className={css.Profile}>\r\n            <div className={css.ProfileUpdateForm}>\r\n                <div className={css.Form}>\r\n                    <TextBox label=\"Имэйл\" name=\"email\" value={email} onchangefunc={(e) => changeEmail(e)} />\r\n                    <TextBox label=\"Овог\" name=\"lname\" value={lname} onchangefunc={(e) => changeLname(e)} />\r\n                    <TextBox label=\"Нэр\" name=\"fname\" value={fname} onchangefunc={(e) => changeFname(e)} />\r\n                    {/* <AsyncSelect defaultOptions={optionsUserRole} value={defaultValue} onChange={changeUserRole} /> */}\r\n                    <AsyncSelectComponent label=\"Хэрэглэгчийн эрх\" optionsUserRole={optionsUserRole} defaultValue={defaultValue} changeUserRole={changeUserRole} />\r\n                    {/* <SelectComponent label=\"Хэрэглэгчийн эрх\" value={defaultValue} options={optionsUserRole} onchangefunc={(e) => changeUserRole(e)} /> */}\r\n                    <TextBox label=\"Тайлбар\" value={description} onchangefunc={(e) => changeDescription(e)} />\r\n                    <TextBox label=\"Утасны дугаар\" value={phoneNo} onchangefunc={(e) => changePhoneNo(e)} />\r\n                    <TextBox label=\"Регистрийн дугаар\" value={regNo} onchangefunc={(e) => changeRegNo(e)} />\r\n                    \r\n                    {/* <div className={css.FormControl}>\r\n                        <label className={css.Label}>Хэрэглэгчийн эрх</label>\r\n                        <div>\r\n                            <select name=\"userRole\" className={css.SelectStyle} value={userRole} onChange={changeUserRole}>\r\n                                <option value=\"admin\">Админ</option>\r\n                                <option value=\"reception\">Ресепшн</option>\r\n                                <option value=\"doctor\">Эмч</option>\r\n                            </select>\r\n                            {/* <div className={css.}></div> \r\n                        </div>\r\n                        <span className={css.FocusInput}></span>\r\n                    </div> */}\r\n\r\n                    \r\n                    \r\n                    <br/> <br/>\r\n                    <Button text=\"Шинэчлэх\" clicked={updateProfile} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Logo = () => (\r\n    <div className=\"navbar-brand\">\r\n        <Link className=\"navbar-item\" to=\"/\">\r\n            <img src=\"http://bulma.io/images/bulma-logo.png\" alt=\"Bulma: a modern CSS framework based on Flexbox\" />\r\n        </Link>\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ProfileToolbar = props => {\r\n    const location = {\r\n        pathname: \"/profile\",\r\n        state: { userId: props.userId }\r\n    };\r\n\r\n    return (\r\n        <div className=\"navbar-end\">\r\n            <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                <a className=\"navbar-link\">\r\n                    {`${props.lname}`.substring(0, 1)}.{props.fname}\r\n                </a>\r\n                <div className=\"navbar-dropdown\">\r\n                    <Link className=\"navbar-item\" to=\"/dashboard\">\r\n                        Хяналтын самбар\r\n                    </Link>\r\n                    <Link className=\"navbar-item\" to={location}>\r\n                        Бүртгэл\r\n                    </Link>\r\n                    <Link className=\"navbar-item\" to=\"/settings\">\r\n                        Тохиргоо\r\n                    </Link>\r\n                    <hr className=\"navbar-divider\" />\r\n                    <Link className=\"navbar-item\" to=\"/logout\">\r\n                        Гарах\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      lname: state.signupLoginReducer.lname,\r\n      fname: state.signupLoginReducer.fname,\r\n      userId: state.signupLoginReducer.userId\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps)(ProfileToolbar);","import React from \"react\";\r\nimport Logo from \"../Logo\";\r\nimport ProfileToolbar from \"../ProfileToolbar\";\r\n// import css from \"./style.module.css\";\r\n\r\nconst Toolbar = props => (\r\n    <nav className=\"navbar has-shadow is-primary\">\r\n        <div className=\"container\">\r\n            <Logo />\r\n            <ProfileToolbar />\r\n        </div>\r\n    </nav>\r\n\r\n);\r\n\r\nexport default Toolbar;","import React from \"react\";\r\nimport css from \"./style.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst MenuItem = props => (\r\n    <li className={css.MenuItem}>\r\n        <NavLink activeClassName={css.active} to={props.link}>\r\n            {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default MenuItem;","import React from \"react\";\r\nimport MenuItem from \"../MenuItem\";\r\nimport css from \"./style.module.css\";\r\n\r\nconst Menu = () => (\r\n    <ul className={css.Menu}>\r\n        <MenuItem active link=\"/dashboard\" iconType=\"fa fa-inbox\">Хяналтын самбар</MenuItem>\r\n        <MenuItem link=\"/appointment\" iconType=\"fas fa-utensils\">Цаг өгөх</MenuItem>\r\n        <MenuItem link=\"/bill\" iconType=\"\">Төлбөрийн баримт</MenuItem>\r\n        <MenuItem link=\"/setStatus\" iconType=\"\">Статус оруулах</MenuItem>\r\n        <br/>\r\n        <br/>\r\n        <MenuItem link=\"/createHospital\" iconType=\"\">Эмнэлэг бүртгэх</MenuItem>\r\n        <MenuItem link=\"/createDepartment\" iconType=\"\">Тасаг бүртгэх</MenuItem>\r\n        <MenuItem link=\"/signupEmployee\" iconType=\"\">Ажилтан бүртгэх</MenuItem>\r\n        <br/>\r\n        <MenuItem link=\"/listHospitals\" iconType=\"\">Эмнэлгүүдийн жагсаалт</MenuItem>\r\n        <MenuItem link=\"/listDepartments\" iconType=\"\">Тасагуудын жагсаалт</MenuItem>\r\n        <MenuItem link=\"/listEmployees\" iconType=\"\">Ажилтнуудын жагсаалт</MenuItem>\r\n    </ul>\r\n);\r\n\r\nexport default Menu;","import React, { useState, useRef, useEffect } from \"react\";\r\nimport css from \"./style.module.css\";\r\nimport { db } from \"../../firebase\";\r\nimport Button from \"../General/Button\";\r\nimport TextBox from \"../General/TextBox\";\r\nimport SelectComponent from \"../General/SelectComponent\";\r\n\r\nconst PatientRegistrationForm = () => {\r\n    const [patientInfo, setPatientInfo] = useState({\r\n        citizenship: \"\",\r\n        fname: \"\",\r\n        lname: \"\",\r\n        gender: \"\",\r\n        regNo: \"\",\r\n        phoneNo: \"\",\r\n        email: \"\",\r\n        city: \"\",\r\n        district: \"\",\r\n        khoroo: \"\",\r\n        building: \"\"\r\n    });\r\n\r\n    const [formCheck, setFormCheck] = useState({\r\n        // errorMark: { required талбаруудын анхны утга true байх! энэ нь бөглөөгүй шууд submit хийсэн үед алдаа үзүүлэх зорилготой\r\n            citizenship: true,\r\n            fname: true,\r\n            lname: true,\r\n            gender: true,\r\n            regNo: true,\r\n            phoneNo: true,\r\n            email: \"\",\r\n            city: true,\r\n            district: true,\r\n            khoroo: true,\r\n            building: \"\"\r\n        // },\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({ lname: \"\", fname: \"\" });\r\n    //const [buttonText, setButtonText] = useState(\"Хайх\");\r\n    \r\n    /*const submitForm = e => {\r\n        e.preventDefault();\r\n\r\n        if(buttonText === \"Хайх\") {\r\n            alert(\"Хэрэглэгчийн бүртгэл олдсонгүй. Шинээр бүртгэнэ үү!\");\r\n        } else if (buttonText === \"Бүртгэх\") {\r\n            alert(\"case 2\");\r\n        }\r\n        setButtonText(\"Бүртгэх\");\r\n    };*/\r\n\r\n    const submitForm = e => {\r\n        // console.log(\"checking the button to register patient\", patientCitizenship, patientLname, patientFname, patientRegno, patientPhoneNo, patientCity, patientDistrict, patientKhoroo, patientBuilding);\r\n        console.log(\"checking the button to register patient\", patientInfo);\r\n        console.log(\"checking submit form marks\", formCheck);\r\n        let textLeftWarningForSubmit = \"\";\r\n        let textRightWarningForSubmit = \"\";\r\n\r\n\r\n        if(formCheck.citizenship === true)\r\n            textLeftWarningForSubmit += ` {Харъяалал}`;\r\n        if(formCheck.lname === true)\r\n            textLeftWarningForSubmit += ` {Овог}`;\r\n        if(formCheck.fname === true)\r\n            textLeftWarningForSubmit += ` {Нэр}`;\r\n        if(formCheck.gender === true)\r\n            textLeftWarningForSubmit += ` {Хүйс}`;\r\n        if(formCheck.regNo === true)\r\n            textLeftWarningForSubmit += ` {Регистр}`;\r\n        if(formCheck.phoneNo === true)\r\n            textLeftWarningForSubmit += ` {Дугаар}`;\r\n        if(formCheck.city === true)\r\n            textLeftWarningForSubmit += ` {Хот, аймаг}`;\r\n        if(formCheck.district === true)\r\n            textLeftWarningForSubmit += ` {Дүүрэг, сум}`;\r\n        if(formCheck.khoroo === true)\r\n            textLeftWarningForSubmit += ` { Хороо, баг}`;\r\n\r\n        textRightWarningForSubmit += \" талбаруудыг заавал, үнэн зөв бөглөнө үү!\";\r\n    \r\n        // var patientId = db.collection(\"patients\").doc().;\r\n\r\n        if(!formCheck.citizenship && !formCheck.lname && \r\n            !formCheck.fname && !formCheck.gender && \r\n            !formCheck.regNo && !formCheck.phoneNo && \r\n            !formCheck.city && !formCheck.district && !formCheck.khoroo) {\r\n            //Форм баталгаажсан бүртгэл хийгдэх хэсэг\r\n            var patientDocRef = db.collection(\"patients\").doc();\r\n            patientDocRef.set({\r\n                patientId: patientDocRef.id,\r\n                citizenship: patientInfo.citizenship,\r\n                fname: patientInfo.fname,\r\n                lname: patientInfo.lname,\r\n                gender: patientInfo.gender,\r\n                regNo: patientInfo.regNo,\r\n                phoneNo: patientInfo.phoneNo,\r\n                email: patientInfo.email,\r\n                city: patientInfo.city,\r\n                district: patientInfo.district,\r\n                khoroo: patientInfo.khoroo,\r\n                building: patientInfo.building\r\n            }).then(() => {\r\n                alert(\"Хэрэглэгчийг амжилттай бүртгэлээ!\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"БҮРТГЭХЭД АЛДАА ГАРЛАА!\");\r\n            });\r\n        } else {\r\n            alert(textLeftWarningForSubmit + textRightWarningForSubmit);\r\n        }\r\n\r\n        textLeftWarningForSubmit = \"\";\r\n    };\r\n\r\n    const changeGender = e => {\r\n        setPatientInfo({ ...patientInfo, gender: e.value });\r\n    };\r\n\r\n    const changeCitizenship = e => {\r\n        setPatientInfo({ ...patientInfo, citizenship: e.value });\r\n    };\r\n\r\n    const changeCity = e => {\r\n        setPatientInfo({ ...patientInfo, city: e.value });\r\n    };\r\n\r\n    const changeDistrict = e => {\r\n        setPatientInfo({ ...patientInfo, district: e.value });\r\n    };\r\n\r\n    const optionsCity = [\r\n        {value: \"ulaanbaatar\", label: \"Улаанбаатар\", componentLabel: \"city\"},\r\n        {value: \"arkhangai\", label: \"Архангай\", componentLabel: \"city\"},\r\n        {value: \"bayan-ulgii\", label: \"Баян-Өлгий\", componentLabel: \"city\"},\r\n        {value: \"bayankhongor\", label: \"Баянхонгор\", componentLabel: \"city\"},\r\n        {value: \"bulgan\", label: \"Булган\", componentLabel: \"city\"},\r\n        {value: \"govi-altai\", label: \"Говь-Алтай\", componentLabel: \"city\"},\r\n        {value: \"darkhan-uul\", label: \"Дархан-Уул\", componentLabel: \"city\"},\r\n        {value: \"dornogovi\", label: \"Дорноговь\", componentLabel: \"city\"},\r\n        {value: \"dornod\", label: \"Дорнод\", componentLabel: \"city\"},\r\n        {value: \"dundgovi\", label: \"Дундговь\", componentLabel: \"city\"},\r\n        {value: \"zavkhan\", label: \"Завхан\", componentLabel: \"city\"},\r\n        {value: \"orkhon\", label: \"Орхон\", componentLabel: \"city\"},\r\n        {value: \"uvurkhangai\", label: \"Өвөрхангай\", componentLabel: \"city\"},\r\n        {value: \"umnugovi\", label: \"Өмнөговь\", componentLabel: \"city\"},\r\n        {value: \"sukhbaatar\", label: \"Сүхбаатар\", componentLabel: \"city\"},\r\n        {value: \"selenge\", label: \"Сэлэнгэ\", componentLabel: \"city\"},\r\n        {value: \"tuv\", label: \"Төв\", componentLabel: \"city\"},\r\n        {value: \"uvs\", label: \"Увс\", componentLabel: \"city\"},\r\n        {value: \"khovd\", label: \"Ховд\", componentLabel: \"city\"},\r\n        {value: \"khuvsgul\", label: \"Хөвсгөл\", componentLabel: \"city\"},\r\n        {value: \"khentii\", label: \"Хэнтий\", componentLabel: \"city\"}\r\n    ];\r\n\r\n    const optionsDistrict = [\r\n        {value: \"baganuur\", label: \"Багануур\", city: \"ulaanbaatar\", componentLabel: \"district\"},\r\n        {value: \"bagakhangai\", label: \"Багахангай\", city: \"ulaanbaatar\", componentLabel: \"district\"},\r\n        {value: \"bayangol\", label: \"Баянгол\", city: \"ulaanbaatar\", componentLabel: \"district\"},\r\n        {value: \"bayanzurkh\", label: \"Баянзүрх\", city: \"ulaanbaatar\", componentLabel: \"district\"},\r\n        {value: \"nalaikh\", label: \"Налайх\", city: \"ulaanbaatar\", componentLabel: \"district\"},\r\n        {value: \"songinokhairkhan\", label: \"Сонгинохайрхан\", city: \"ulaanbaatar\", componentLabel: \"district\"},\r\n        {value: \"sukhbaatar\", label: \"Сүхбаатар\", city: \"ulaanbaatar\", componentLabel: \"district\"},\r\n        {value: \"khan-uul\", label: \"Хан-Уул\", city: \"ulaanbaatar\", componentLabel: \"district\"},\r\n        {value: \"chingeltei\", label: \"Чингэлтэй\", city: \"ulaanbaatar\", componentLabel: \"district\"}\r\n    ];\r\n\r\n    const optionsGender = [\r\n        {value: \"MALE\", label: \"Эрэгтэй\", componentLabel: \"patientGender\"},\r\n        {value: \"FEMALE\", label: \"Эмэгтэй\", componentLabel: \"patientGender\"}\r\n    ];\r\n\r\n    const optionsCitizenship = [\r\n        {value: \"MGL\", label: \"Монгол\", componentLabel: \"patientCitizenship\"},\r\n        {value: \"ITL\", label: \"Гадаад\", componentLabel: \"patientCitizenship\"}\r\n    ];\r\n\r\n    // const filteredOptionsDistrict = optionsDistrict.filter(el => el.city === selectCity);\r\n    \r\n    return (\r\n        <>\r\n            {/* <input placeholder=\"haha....\" ref={inputRef} /> */}\r\n            <br/><br/>\r\n            <SelectComponent \r\n                onchangefunc={(e) => changeCitizenship(e)} \r\n                options={optionsCitizenship} \r\n                label=\"Хэрэглэгчийн эрх*\"\r\n                setComponentInfo={setPatientInfo}\r\n                componentAllInfo={patientInfo}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            <TextBox \r\n                label=\"Овог*\" \r\n                name=\"lName\" \r\n                setComponentInfo={setPatientInfo} \r\n                componentInfo={patientInfo['lname']} \r\n                componentAllInfo={patientInfo} \r\n                setWarning={setFormErrors} \r\n                warning={formErrors['lname']} \r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            <TextBox \r\n                label=\"Нэр*\" \r\n                name=\"fName\" \r\n                setComponentInfo={setPatientInfo} \r\n                componentInfo={patientInfo['fname']} \r\n                componentAllInfo={patientInfo} \r\n                setWarning={setFormErrors} \r\n                warning={formErrors['fname']} \r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            <SelectComponent \r\n                onchangefunc={(e) => changeGender(e)} \r\n                options={optionsGender} \r\n                label=\"Хүйс*\"\r\n                setComponentInfo={setPatientInfo}\r\n                componentAllInfo={patientInfo}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            <TextBox \r\n                name=\"regNo\"\r\n                label=\"Регистрийн дугаар*\" \r\n                setComponentInfo={setPatientInfo}\r\n                componentInfo={patientInfo['regNo']}\r\n                componentAllInfo={patientInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors['regNo']}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n\r\n            <TextBox \r\n                name=\"phoneNo\"\r\n                label=\"Утас*\" \r\n                setComponentInfo={setPatientInfo}\r\n                componentInfo={patientInfo['phoneNo']}\r\n                componentAllInfo={patientInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors['phoneNo']}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <TextBox \r\n                name=\"email\"\r\n                label=\"Email\" \r\n                setComponentInfo={setPatientInfo}\r\n                componentInfo={patientInfo['email']}\r\n                componentAllInfo={patientInfo}\r\n                setWarning={setFormErrors}\r\n                warning={formErrors['email']}\r\n                allwarnings={formErrors}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <SelectComponent \r\n                onchangefunc={(e) => changeCity(e)} \r\n                options={optionsCity} label=\"Хот, аймаг\"\r\n                setComponentInfo={setPatientInfo}\r\n                componentAllInfo={patientInfo}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <SelectComponent \r\n                onchangefunc={(e) => changeDistrict(e)} \r\n                options={optionsDistrict} \r\n                label=\"Сум, дүүрэг\"\r\n                setComponentInfo={setPatientInfo}\r\n                componentAllInfo={patientInfo}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <TextBox \r\n                name=\"khoroo\"\r\n                label=\"Баг, хороо\"\r\n                setComponentInfo={setPatientInfo}\r\n                componentInfo={patientInfo['khoroo']}\r\n                componentAllInfo={patientInfo}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck} />\r\n            \r\n            <TextBox  \r\n                name=\"building\"\r\n                label=\"Хороолол, байр, тоот\"\r\n                setComponentInfo={setPatientInfo}\r\n                componentInfo={patientInfo['building']}\r\n                componentAllInfo={patientInfo}\r\n                setFormCheck={setFormCheck}\r\n                formCheckInfo={formCheck}/>\r\n            <br />\r\n            <br />\r\n            <Button text=\"Бүртгэх\" clicked={submitForm} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PatientRegistrationForm;","import { db } from \"../../firebase\";\r\n\r\nexport const collectAppointmentsAction = (appDate, appTime, isClicked) => {\r\n    return {\r\n        type: \"COLLECT_APPOINTMENTS_ALL\",\r\n        apps: {appDate,\r\n            appTime,\r\n            isClicked\r\n        }\r\n    };\r\n};\r\n\r\nexport const collectAppDate = (selectedDate) => {\r\n    // db.collection(\"appointments\").doc(selectedDate)\r\n    var busyTimes = [];\r\n    db.collection('appointments').doc(selectedDate).collection('appTime').get().then((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            console.log(doc.data().value);\r\n            busyTimes.push(doc.data().value);\r\n        });\r\n    });\r\n\r\n    return {\r\n        type: \"COLLECT_APP_DATE\",\r\n        selectedDate,\r\n        busyTimes\r\n    };\r\n};\r\n\r\nexport const prepareTimeOptions = (selectedDate, busyTimes) => {\r\n    console.log(\"IT WORKS!!!\");\r\n    const timeOptions = [\r\n        { value: 540, label: \"09:00\" },\r\n        { value: 555, label: \"09:15\" },\r\n        { value: 570, label: \"09:30\" },\r\n        { value: 585, label: \"09:45\" },\r\n        { value: 600, label: \"10:00\" },\r\n        { value: 615, label: \"10:15\" },\r\n        { value: 630, label: \"10:30\" },\r\n        { value: 645, label: \"10:45\" },\r\n        { value: 660, label: \"11:00\" },\r\n        { value: 675, label: \"11:15\" },\r\n        { value: 690, label: \"11:30\" },\r\n        { value: 705, label: \"11:45\" },\r\n        { value: 720, label: \"12:00\" },\r\n        { value: 735, label: \"12:15\" },\r\n        { value: 750, label: \"12:30\" },\r\n        { value: 765, label: \"12:45\" },\r\n        { value: 780, label: \"13:00\" },\r\n        { value: 795, label: \"13:15\" },\r\n        { value: 810, label: \"13:30\" },\r\n        { value: 825, label: \"13:45\" },\r\n        { value: 840, label: \"14:00\" },\r\n        { value: 855, label: \"14:15\" },\r\n        { value: 870, label: \"14:30\" },\r\n        { value: 885, label: \"14:45\" },\r\n        { value: 900, label: \"15:00\" },\r\n        { value: 915, label: \"15:15\" },\r\n        { value: 930, label: \"15:30\" },\r\n        { value: 945, label: \"15:45\" },\r\n        { value: 960, label: \"16:00\" },\r\n        { value: 975, label: \"16:15\" },\r\n        { value: 990, label: \"16:30\" },\r\n        { value: 1005, label: \"16:45\" },\r\n        { value: 1020, label: \"17:00\" },\r\n        { value: 1035, label: \"17:15\" },\r\n        { value: 1050, label: \"17:30\" },\r\n        { value: 1065, label: \"17:45\" }\r\n    ];\r\n\r\n    const removeUsedItemsFromList = () => {\r\n        var l = busyTimes.length;\r\n\r\n        for ( var i=0; i<l; i++ ) {\r\n            var timeOptionsIndexes = timeOptions.map( el => {\r\n                return el.value;\r\n            });\r\n\r\n            timeOptions.splice(timeOptionsIndexes.indexOf(busyTimes[0]),1); //570 removed, [540, 555, 585, 600...] 540 removed, \r\n            busyTimes.shift();\r\n        }\r\n    };\r\n\r\n    removeUsedItemsFromList();\r\n\r\n    return {\r\n        type: \"PREPARE_APP_TIMES\",\r\n        test1: timeOptions,\r\n        removeValues: busyTimes\r\n    };\r\n};\r\n\r\nexport const collectAppTime = (selectedTime) => {\r\n    return {\r\n        type: \"COLLECT_APP_TIME\",\r\n        selectedTime\r\n    };\r\n};\r\n\r\nexport const collectRegNo = (selectedRegNo) => {\r\n    return {\r\n        type: \"COLLECT_REG_NO\",\r\n        selectedRegNo\r\n    };\r\n};","import React, { useState } from 'react';\r\nimport * as actions from \"../../redux/actions/appointmentActions\";\r\nimport { connect } from \"react-redux\";\r\nimport AsyncSelect from 'react-select/async';\r\n\r\nconst TimePicker = props => {\r\n\r\n    const filterColors = (inputValue) => {\r\n        if(props.timeOptions===null || props.timeOptions===undefined || typeof(props.timeOptions)==='string') {\r\n            return '';\r\n        }\r\n        else {\r\n            console.log(\"RETURN NOT EMPTY!!!\", props.timeOptions);\r\n            return props.timeOptions.filter(i => {\r\n                return i.label.toLowerCase().includes(inputValue);\r\n            });\r\n        }\r\n    };\r\n\r\n    const promiseOptions = (inputValue) =>\r\n        new Promise(resolve => {\r\n            setTimeout(() => {\r\n                resolve(filterColors(inputValue));\r\n            }, 1000);\r\n        });\r\n\r\n    const onChangeSelectedOption = inputValue => {\r\n        props.collectAppTime(inputValue);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AsyncSelect\r\n                isMulti\r\n                defaultOptions\r\n                key={props.timeOptions}\r\n                loadOptions={promiseOptions}\r\n                onChange={onChangeSelectedOption}\r\n            />\r\n            <br/><br/>\r\n            {/* {typeof(props.timeOptions) === \"string\" && \r\n                <div>{props.timeOptions}</div>}\r\n            {typeof(props.timeOptions) === \"object\" &&\r\n                <div>{JSON.stringify(props.timeOptions)}</div>} */}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedDate: state.appointmentReducer.selectedDate,\r\n        test1: state.appointmentReducer.test1\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        collectAppTime: (selectedTime) => dispatch(actions.collectAppTime(selectedTime))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimePicker);","import React, { Component } from \"react\";\r\n// import { jsx } from \"@emotion/react\";\r\nimport moment from \"moment\";\r\nimport * as chrono from \"chrono-node\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/appointmentActions\";\r\n\r\nimport Select from \"react-select\";\r\nimport { components as SelectComponents } from \"react-select\";\r\n\r\nconst createOptionForDate = d => {\r\n    const date = moment.isMoment(d) ? d : moment(d);\r\n    return {\r\n        date,\r\n        value: date.toDate(),\r\n        label: date.calendar(null, {\r\n            sameDay: '[Today] (Do MMM YYYY)',\r\n            nextDay: '[Tomorrow] (Do MMM YYYY)',\r\n            nextWeek: '[Next] dddd (Do MMM YYYY)',\r\n            lastDay: '[Yesterday] (Do MMM YYYY)',\r\n            lastWeek: '[Last] dddd (Do MMM YYYY)',\r\n            sameElse: 'Do MMMM YYYY',\r\n        }),\r\n    };\r\n};\r\n\r\nconst defaultOptions = ['today', 'tomorrow'].map( i =>\r\n    createOptionForDate(chrono.parseDate(i))\r\n);\r\n\r\nconst createCalendarOptions = (date = new Date()) => {\r\n    // $FlowFixMe\r\n    const daysInMonth = Array.apply(null, {\r\n        length: moment(date).daysInMonth(),\r\n    }).map((x, i) => {\r\n        const d = moment(date).date(i + 1);\r\n        if(moment().add(-1, 'days').toDate() > createOptionForDate(d).value)\r\n            return { ...createOptionForDate(d), display: 'calendar', isDisabled: true };\r\n        else\r\n            return { ...createOptionForDate(d), display: 'calendar' };\r\n    });\r\n    return {\r\n        label: moment(date).format('MMMM YYYY'),\r\n        options: daysInMonth\r\n    };\r\n};\r\n\r\ndefaultOptions.push(createCalendarOptions());\r\n\r\nconst suggestions = [\r\n    'sunday',\r\n    'saturday',\r\n    'friday',\r\n    'thursday',\r\n    'wednesday',\r\n    'tuesday',\r\n    'monday',\r\n    'december',\r\n    'november',\r\n    'october',\r\n    'september',\r\n    'august',\r\n    'july',\r\n    'june',\r\n    'may',\r\n    'april',\r\n    'march',\r\n    'february',\r\n    'january',\r\n    'yesterday',\r\n    'tomorrow',\r\n    'today',\r\n].reduce((acc, str) => {\r\n    for (let i = 1; i < str.length; i++) {\r\n        acc[str.substr(0, i)] = str;\r\n    }\r\n    return acc;\r\n}, {});\r\n\r\nconst suggest = str =>\r\n    str\r\n        .split(/\\b/)\r\n        .map(i => suggestions[i] || i)\r\n        .join('');\r\n\r\nconst days = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\r\n\r\nconst daysHeaderStyles = {\r\n    marginTop: '5px',\r\n    paddingTop: '5px',\r\n    paddingLeft: '2%',\r\n    borderTop: '1px solid #eee',\r\n};\r\nconst daysHeaderItemStyles = {\r\n    color: '#999',\r\n    cursor: 'default',\r\n    display: 'block',\r\n    fontSize: '75%',\r\n    fontWeight: '500',\r\n    display: 'inline-block',\r\n    width: '12%',\r\n    margin: '0 1%',\r\n    textAlign: 'center',\r\n};\r\nconst daysContainerStyles = {\r\n    paddingTop: '5px',\r\n    paddingLeft: '2%',\r\n};\r\n\r\nconst Group = props => {\r\n    const {\r\n        Heading,\r\n        getStyles,\r\n        children,\r\n        label,\r\n        innerProps,\r\n        headingProps,\r\n        cx,\r\n        theme,\r\n    } = props;\r\n    return (\r\n        <div aria-label={label} css={getStyles('group', props)} {...innerProps}>\r\n            <Heading theme={theme} getStyles={getStyles} cx={cx} {...headingProps}>\r\n                {label}\r\n            </Heading>\r\n            <div style={daysHeaderStyles}>\r\n                {days.map((day, i) => (\r\n                    <span key={`${i}-${day}`} \r\n                    style={daysHeaderItemStyles}\r\n                    // style={{backgroundColor: \"red\"}}\r\n                    >\r\n                        {day}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n            <div style={daysContainerStyles}>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst getOptionStyles = defaultStyles => ({\r\n    ...defaultStyles,\r\n    display: 'inline-block',\r\n    width: '12%',\r\n    margin: '0 1%',\r\n    textAlign: 'center',\r\n    borderRadius: '4px'\r\n});\r\n\r\nconst Option = props => {\r\n    const { data, getStyles, innerRef, innerProps } = props;\r\n    if (data.display === 'calendar') {\r\n        const defaultStyles = getStyles('option', props);\r\n        const styles = getOptionStyles(defaultStyles);\r\n        if (data.date.date() === 1) {\r\n            const indentBy = data.date.day();\r\n            if (indentBy) {\r\n                styles.marginLeft = `${indentBy * 14 + 1}%`;\r\n            }\r\n            // console.log(innerProps);\r\n        }\r\n        return (\r\n            <span {...innerProps} \r\n                style={styles} \r\n                // style={{backgroundColor: \"red\"}}\r\n                ref={innerRef}>\r\n                {data.date.format('D')}\r\n            </span>\r\n        );\r\n    } else return <SelectComponents.Option {...props} />;\r\n};\r\n\r\nclass DatePicker extends Component {\r\n    state = {\r\n        options: defaultOptions,\r\n    };\r\n    \r\n    handleChange = e => {\r\n        this.props.collectAppDate(e.date.format(\"YYYY-MM-DD\"));\r\n        \r\n        setTimeout(() => {\r\n            this.props.prepareTimeOptions(this.props.selectedDate, this.props.busyTimes);\r\n            this.props.setTimeOptions(this.props.test1);\r\n        }, 2000);\r\n    };\r\n\r\n    \r\n    render() {\r\n        const { value } = this.props;\r\n        const { options } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Select\r\n                    {...this.props}\r\n                    components={{ Group, Option }}\r\n                    filterOption={null}\r\n                    isMulti={false}\r\n                    isOptionSelected={(o, v) => v.some(i => i.date.isSame(o.date, 'day'))}\r\n                    maxMenuHeight={380}\r\n                    onChange={this.handleChange}\r\n                    options={options}\r\n                    value={value}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedDate: state.appointmentReducer.selectedDate,\r\n        busyTimes: state.appointmentReducer.busyTimes,\r\n        test1: state.appointmentReducer.test1\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        collectAppDate: (selectedDate) => dispatch(actions.collectAppDate(selectedDate)),\r\n        prepareTimeOptions: (timeOptions, busyTimes) => dispatch(actions.prepareTimeOptions(timeOptions, busyTimes))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DatePicker);","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import Profile from \"../Profile\";\r\nimport css from \"./style.module.css\";\r\nimport Button from \"../General/Button\";\r\nimport PatientRegistrationForm from \"../PatientRegistrationForm\";\r\nimport * as actions from \"../../redux/actions/appointmentActions\";\r\nimport { db } from \"../../firebase\";\r\nimport TimePicker from \"../TimePicker\";\r\nimport DatePicker from \"../DatePicker\";\r\n// import AutoCompleteText from \"../AutoCompleteText\";\r\n// import countires from \"../AutoCompleteText/countries\";\r\n// import countries from \"../AutoCompleteText/countries\";\r\n\r\nconst AppointmentContainer = props => {\r\n    // const [selectCity, setSelectCity] = useState();\r\n    // const [selectCity] = useState();\r\n    // const [selectDistrict, setSelectDistrict] = useState();\r\n    // const [selectKhoroo, setSelectKhoroo] = useState();\r\n\r\n    // const FieldValue = require('firebase-admin').firestore.FieldValue;\r\n    const [buttonText, setButtonText] = useState(\"Үйлчлүүлэгчийг бүртгэх\");\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const [timeOptions, setTimeOptions] = useState(\"Parent-с дамжуулав\");\r\n    const [chosenDate, setChosenDate] = useState(props.selectedDate);\r\n    const [chosenTime, setChosenTime] = useState(props.selectedTime);\r\n    const [displayNewPatientForm, setDisplayNewPatientForm] = useState(false);\r\n    const inputRef = React.createRef();\r\n\r\n    useEffect(() => {\r\n        // alert(\"now it works!!!\");\r\n        setChosenDate(props.selectedDate);\r\n        setChosenTime(props.selectedTime);\r\n        console.log(\"CHOSEN DATE: \", chosenDate);\r\n        console.log(\"CHOSEN TIME: \", chosenTime);\r\n    });\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    }, []);\r\n\r\n    const registerNewPatient = (obj) => {\r\n        setDisplayNewPatientForm(!displayNewPatientForm);\r\n        console.log(\"testing no1: \", obj);\r\n        \r\n        // const db = firebase.firestore();\r\n        // const increment = firebase.firestore.FieldValue.increment(-1);\r\n        // const curUser = db.collection(\"employees\").doc(\"CwfbT7143zcA8ZgOSqp6sYOnWaw1\");\r\n        // curUser.update({ patientId: firebase.firestore.FieldValue.serverTimestamp() });\r\n        // curUser.update({ patientId: increment });\r\n        console.log(new Date().getTime());\r\n        \r\n        // console.log(\"timestamp\", firebase.firestore.FieldValue.serverTimestamp());\r\n        // console.log(\"firebase\", firebase.firestore.FieldValue.increment(1));\r\n        // console.log(\"testing value db fieldvalue\", FieldValue );\r\n    }\r\n\r\n    const bookAppointment = () => {\r\n        props.collectRegNo(currentUser.regNo);\r\n    }\r\n\r\n    var registerAppTimesToServer = () => {\r\n        var x = 0;\r\n\r\n        for(x=0; x<props.selectedTime.length; x++) {\r\n            db.collection(\"appointments\").doc(props.selectedDate).collection(\"appTime\").doc().set({\r\n                department: \"Сэргээн засах эмчилгээ\",\r\n                doctor: \"Ж. Пагмадулам\",\r\n                value: props.selectedTime[x].value,\r\n                label: props.selectedTime[x].label,\r\n                patientId: 1,\r\n                regDate: new Date(),\r\n                regBy: currentUser.regNo\r\n            }).then(() => {\r\n                console.log(\"Appointment time successfuly written!\");\r\n                alert(\"Цаг захиалга амжилттай!\");\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Appointment time failed!\");\r\n            });\r\n        }\r\n    }\r\n    \r\n    const submitForm = e => {\r\n        e.preventDefault();\r\n        console.log(\"CURRENT USER\", currentUser);\r\n        console.log(\"CURRENT OBJECT\", Object.keys(currentUser));\r\n        console.log(\"CURRENT OBJECT LENGTH\", Object.keys(currentUser).length);\r\n\r\n        if(undefined !== Object.keys(currentUser) && Object.keys(currentUser).length > 0) {\r\n            bookAppointment(Object.keys(currentUser));\r\n            if(undefined === chosenDate && undefined === chosenTime) {\r\n                alert(\"Өдөр болон цагаа сонгоно уу\");\r\n            } else if (undefined === chosenDate && undefined !== chosenTime) {\r\n                alert(\"Өдрөө сонгоно уу\");\r\n            } else if (undefined !== chosenDate && undefined === chosenTime) {\r\n                alert(\"Цагаа сонгоно уу\");\r\n            } else if (undefined !== chosenDate && undefined !== chosenTime) {\r\n                registerAppTimesToServer();\r\n            }\r\n        } else if(0 === Object.keys(currentUser).length) {\r\n            registerNewPatient(Object.keys(currentUser));\r\n        }\r\n        // console.log(\"SEARCH\", search);\r\n\r\n        // if(currentUser)\r\n        // alert(\"Сайн байна уу, \"+currentUser.fname+\"?\");\r\n        // if(buttonText === \"Хайх\") {\r\n        //     alert(\"Хэрэглэгчийн бүртгэл олдсонгүй. Шинээр бүртгэнэ үү!\");\r\n        // } else if (buttonText === \"Бүртгэх\") {\r\n        //     alert(\"case 2\");\r\n        // }\r\n        // setButtonText(\"Бүртгэх\");\r\n        db.collection(\"appointmentsTimeOnly\").doc();\r\n    };\r\n\r\n    // const changeCity = () => {\r\n    //     setSelectCity(selectCity);\r\n    // };\r\n\r\n    // const changeDistrict = () => {\r\n    //     setSelectDistrict(selectDistrict);\r\n    // };\r\n\r\n    // const changeKhoroo = () => {\r\n    //     setSelectKhoroo(selectKhoroo);\r\n    // };\r\n\r\n    // const optionsCity = [\r\n    //     {value: \"ulaanbaatar\", label: \"Улаанбаатар\"},\r\n    //     {value: \"arkhangai\", label: \"Архангай\"},\r\n    //     {value: \"bayan-ulgii\", label: \"Баян-Өлгий\"},\r\n    //     {value: \"bayankhongor\", label: \"Баянхонгор\"},\r\n    //     {value: \"bulgan\", label: \"Булган\"},\r\n    //     {value: \"govi-altai\", label: \"Говь-Алтай\"},\r\n    //     {value: \"darkhan-uul\", label: \"Дархан-Уул\"},\r\n    //     {value: \"dornogovi\", label: \"Дорноговь\"},\r\n    //     {value: \"dornod\", label: \"Дорнод\"},\r\n    //     {value: \"dundgovi\", label: \"Дундговь\"},\r\n    //     {value: \"zavkhan\", label: \"Завхан\"},\r\n    //     {value: \"orkhon\", label: \"Орхон\"},\r\n    //     {value: \"uvurkhangai\", label: \"Өвөрхангай\"},\r\n    //     {value: \"umnugovi\", label: \"Өмнөговь\"},\r\n    //     {value: \"sukhbaatar\", label: \"Сүхбаатар\"},\r\n    //     {value: \"selenge\", label: \"Сэлэнгэ\"},\r\n    //     {value: \"tuv\", label: \"Төв\"},\r\n    //     {value: \"uvs\", label: \"Увс\"},\r\n    //     {value: \"khovd\", label: \"Ховд\"},\r\n    //     {value: \"khuvsgul\", label: \"Хөвсгөл\"},\r\n    //     {value: \"khentii\", label: \"Хэнтий\"}\r\n    // ];\r\n\r\n    // const optionsDistrict = [\r\n    //     {value: \"baganuur\", label: \"Багануур\", city: \"ulaanbaatar\"},\r\n    //     {value: \"bagakhangai\", label: \"Багахангай\", city: \"ulaanbaatar\"},\r\n    //     {value: \"bayangol\", label: \"Баянгол\", city: \"ulaanbaatar\"},\r\n    //     {value: \"bayanzurkh\", label: \"Баянзүрх\", city: \"ulaanbaatar\"},\r\n    //     {value: \"nalaikh\", label: \"Налайх\", city: \"ulaanbaatar\"},\r\n    //     {value: \"songinokhairkhan\", label: \"Сонгинохайрхан\", city: \"ulaanbaatar\"},\r\n    //     {value: \"sukhbaatar\", label: \"Сүхбаатар\", city: \"ulaanbaatar\"},\r\n    //     {value: \"khan-uul\", label: \"Хан-Уул\", city: \"ulaanbaatar\"},\r\n    //     {value: \"chingeltei\", label: \"Чингэлтэй\", city: \"ulaanbaatar\"}\r\n    // ];\r\n\r\n    // const filteredOptionsDistrict = optionsDistrict.filter(el => el.city === selectCity);\r\n\r\n    const [display, setDisplay] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    // const [options, setOptions] = useState([]);\r\n    // const [items, setItems] = useState([]);\r\n    \r\n    // Үйлчлүүлэгчийн цаг захиалахтай холбоотой үйлчүүлэгчийг сет хийх хувьсагчид\r\n    const [documents, setDocuments] = useState([]);\r\n    const wrapperRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // console.log(\"update of search: \", search);\r\n        // console.log(\"object values: \", currentUser);\r\n    }, [search]);\r\n\r\n    useEffect(() => {\r\n        // db.collection(\"employees\").doc(selectedDate).collection('appTime').get().then((querySnapshot) => {\r\n        //     querySnapshot.forEach((doc) => {\r\n        //         console.log(doc.data().value);\r\n        //         busyTimes.push(doc.data().value);\r\n        //     });\r\n        // });\r\n\r\n        db.collection(\"patients\")\r\n            .get()\r\n            .then((querySnapshot) => {\r\n                // querySnapshot.forEach((doc) => {\r\n                //     console.log(\"retrieved data=> \", doc.data());\r\n                // });\r\n                setDocuments(querySnapshot.docs.map(doc => doc.data()));\r\n                // console.log(\"retrieved data=> \", documents);\r\n            });\r\n\r\n        setTimeout(() => {\r\n            // console.log(\"outside data=> \", documents);\r\n        }, 2500);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"mousedown\", handleClickOutside);\r\n        // window.addEventListener(\"keydown\", handleClickKeyDown);\r\n        return () => {\r\n            window.removeEventListener(\"mousedown\", handleClickOutside);\r\n            // window.removeEventListener(\"keydown\", handleClickKeyDown);\r\n        };\r\n    });\r\n\r\n    const handleClickOutside = event => {\r\n        const { current: wrap } = wrapperRef;\r\n        if (wrap && !wrap.contains(event.target)) {\r\n            setDisplay(false);\r\n        }\r\n    };\r\n\r\n    const suggestionSelected = (obj) => {\r\n        setSearch(obj.lname.charAt(0)+\".\"+obj.fname);\r\n        setCurrentUser(obj);\r\n        // console.log(\"search---->\", search);\r\n        // console.log(\"object---->\", currentUser);\r\n        setDisplay(false);\r\n        // setButtonText(\"Цаг өгөх\");\r\n    };\r\n\r\n    const onTextChanged = e => {\r\n        // const items = documents;\r\n        // console.log(\"DOCUMENTS\", documents);\r\n        const value = e.target.value;\r\n        setDisplay(true);\r\n        if(value.length>0 && documents.length>0) {\r\n            setDisplay(true);\r\n        }\r\n        if(value.length === 0 || documents.length===0){\r\n            setButtonText(\"Үйлчлүүлэгчийг бүртгэх\");\r\n            setDisplay(false);\r\n            setCurrentUser([]);\r\n            // console.log(\"documents length=> \", documents.length);\r\n        }\r\n        setSearch(value);\r\n    };\r\n\r\n    return (\r\n        <div className={css.Profile}>\r\n            <div className={css.ProfileUpdateForm}>\r\n                <div>\r\n                    <form>\r\n                        {!displayNewPatientForm && (\r\n                            <>\r\n                                <div className={css.Title}>\r\n                                    <h1>Цаг олгох</h1>\r\n                                </div>\r\n                            \r\n                                <div className={css.FormControl}>\r\n                                    <input \r\n                                        ref={inputRef}\r\n                                        className={css.Input} \r\n                                        onChange={onTextChanged} \r\n                                        value={search} \r\n                                        valuetype=\"text\" \r\n                                        placeholder=\"Хайх нэрээ оруулна уу...\" />\r\n                                    \r\n                                    {display && (\r\n                                        <div>\r\n                                            {documents\r\n                                                .filter(({fname}) => fname.toLowerCase().includes(search.toLowerCase()))\r\n                                                .map((value, i) => {\r\n                                                    return (\r\n                                                        <ul className={css.SearchBar} key={i} >\r\n                                                            <li key={ Math.random().toString(36).substr(2, 9)}\r\n                                                                onClick={() => suggestionSelected(value)}>\r\n                                                                <span>{`${value.lname}`} {value.fname}</span>\r\n                                                                <span>{value.phoneNo}</span>\r\n                                                                <span>{`${value.regNo}`.substring(4, 6)}/{`${value.regNo}`.substring(6, 8)}</span>\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <DatePicker \r\n                                    setTimeOptions={setTimeOptions} />\r\n                                <br/>\r\n                                <TimePicker\r\n                                    timeOptions={timeOptions} />\r\n\r\n                                <Button text={buttonText} clicked={submitForm} />\r\n                            </>)\r\n                        }\r\n                    </form>  \r\n                    \r\n                    {displayNewPatientForm && (\r\n                        <PatientRegistrationForm />\r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId: state.signupLoginReducer.userId,\r\n        userRole: state.signupLoginReducer.userRole,\r\n        lname: state.signupLoginReducer.lname,\r\n        fname: state.signupLoginReducer.fname,\r\n        selectedRegNo: state.appointmentReducer.selectedRegNo,\r\n        selectedDate: state.appointmentReducer.selectedDate,\r\n        selectedTime: state.appointmentReducer.selectedTime,\r\n        testingValue: state.appointmentReducer.testingValue,\r\n        test1: state.appointmentReducer.test1\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        collectRegNo: selectedRegNo => dispatch(actions.collectRegNo(selectedRegNo))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentContainer);","import React from \"react\";\r\nimport css from \"./style.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/appointmentActions\";\r\n\r\nconst RegNoInput = props => {\r\n    const handleChange = e => {\r\n        props.collectRegNo(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <input className={css.Input} valuetype=\"text\" onChange={handleChange} placeholder=\"Хайлт: [Регистрийн дугаар, Гадаад пасспортын дугаар]\" />\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        collectRegNo: selectedRegNo => dispatch(actions.collectRegNo(selectedRegNo))\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegNoInput);","import React, { useState } from \"react\";\r\nimport css from \"./style.module.css\";\r\n// import Moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions/appointmentActions\";\r\nimport DatePicker from \"../DatePicker\";\r\nimport Button from \"../../components/General/Button\";\r\nimport TimePicker from \"../TimePicker\";\r\nimport RegNoInput from \"../../components/RegNoInput\";\r\nimport { db } from \"../../firebase\";\r\n\r\nconst AppointmentPicker = props => {\r\n    // const [selectedDate, setSelectedDate] = useState(Moment(new Date()).format(\"YYYY-MM-DD\"));\r\n    const [timeOptions, setTimeOptions] = useState(\"Parent-с дамжуулав\");\r\n\r\n    // const handleChange = (e) => {\r\n    //     setSelectedDate(e.target.value);\r\n    // };\r\n\r\n    // const loadOptions = () => {\r\n    //     setTimeout(()=>{\r\n    //         const response = props.test1;\r\n    //         // const response = fetch(`https://www.anapioficeandfire.com/api/houses?region=The%20Vale&page=1&pageSize=10`);\r\n\r\n    //         return {\r\n    //             options: timeOptions\r\n    //         }\r\n    //     }, 2000);\r\n    // };\r\n\r\n    // const filterColors = inputValue => {\r\n    //     return timeOptions.filter(i => {\r\n    //             return i.label.toLowerCase().includes(inputValue)\r\n    //         }\r\n    //     );\r\n    // };\r\n    \r\n    // const promiseOptions = inputValue =>\r\n    //     new Promise(resolve => {\r\n    //         setTimeout(() => {\r\n    //             resolve(filterColors(inputValue));\r\n    //         }, 1000);\r\n    //     });\r\n\r\n    const submitForm = (e) => {\r\n        // props.collectRegNo()\r\n        //appointmentsiin object\r\n        // var myObj = {\r\n        //     \"user\": props.selectedRegNo,\r\n        //     \"appDate\": props.selectedDate,\r\n        //     \"appTime\": props.selectedTime\r\n        // };\r\n\r\n        var registerAppTimesToServer = () => {\r\n            var x = 0;\r\n\r\n            for(x=0; x<props.selectedTime.length; x++) {\r\n                db.collection(\"appointments\").doc(props.selectedDate).collection(\"appTime\").doc().set({\r\n                    department: \"Сэргээн засах эмчилгээ\",\r\n                    doctor: \"Ж. Пагмадулам\",\r\n                    value: props.selectedTime[x].value,\r\n                    label: props.selectedTime[x].label,\r\n                    patientId: 1,\r\n                    regDate: new Date(),\r\n                    regBy: \"Ж. Эрдэнэтөгс\"\r\n                }).then(() => {\r\n                    console.log(\"Appointment time successfuly written!\");\r\n                    alert(\"Цаг захиалга амжилттай!\");\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Appointment time failed!\");\r\n                });\r\n            }\r\n        }\r\n\r\n        registerAppTimesToServer();\r\n    };\r\n\r\n    return (\r\n        <div className={css.Profile}>\r\n            <div className={css.ProfileUpdateForm}>\r\n                Get a appointment<br/><br/>\r\n                <RegNoInput /><br/>\r\n                \r\n                <DatePicker \r\n                    setTimeOptions={setTimeOptions} />\r\n                <br/>\r\n                <TimePicker \r\n                    timeOptions={timeOptions} />\r\n\r\n                <Button text={\"Цаг өгөх\"} clicked={submitForm} />\r\n                <hr/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedRegNo: state.appointmentReducer.selectedRegNo,\r\n        selectedDate: state.appointmentReducer.selectedDate,\r\n        selectedTime: state.appointmentReducer.selectedTime,\r\n        testingValue: state.appointmentReducer.testingValue,\r\n        test1: state.appointmentReducer.test1\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        collectRegNo: (selectedRegNo) => dispatch(actions.collectRegNo(selectedRegNo))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentPicker);","import React, { useState } from \"react\";\r\n\r\nconst AppointmentContext = React.createContext();\r\n\r\nconst initialState = {\r\n    appsDate: null,\r\n    appsTime: null,\r\n    isClicked: false\r\n};\r\n\r\nexport const AppointmentStore = props => {\r\n    const [appointments, setAppointments] = useState(initialState);\r\n    const [toggleAppBtnState, setToggleAppBtnState] = useState(false);\r\n\r\n    const funcToggleAppBtn = (date, time, clicked) => {\r\n        setToggleAppBtnState(!toggleAppBtnState);\r\n        setAppointments({\r\n            ...appointments,\r\n            appsDate: date,\r\n            appsTime: time,\r\n            isClicked: toggleAppBtnState\r\n        });\r\n    };\r\n\r\n    return (\r\n        <AppointmentContext.Provider\r\n            value={{appointments,\r\n            funcToggleAppBtn}}\r\n        >\r\n            {props.children}\r\n        </AppointmentContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AppointmentContext;","import React, { useState } from \"react\";\r\nimport css from \"./style.module.css\";\r\nimport TextBox from \"../General/TextBox\";\r\nimport SelectComponent from \"../General/SelectComponent\";\r\nimport Button from \"../General/Button\";\r\n\r\nconst HospitalSettings = () => {\r\n    const [hospitalInfo, setHospitalInfo] = useState({\r\n        // hospitalId: \"\",\r\n        regNo: \"\",\r\n        lname: \"\",\r\n        fname: \"\",\r\n        phoneNo: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        userRole: \"\",\r\n        // createdDate: \"\",\r\n        // modifiedDate: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const [formErrors, setFormErrors] = useState({\r\n        regNo: \"\",\r\n        lname: \"\",\r\n        fname: \"\",\r\n        phoneNo: \"\",\r\n        password: \"\",\r\n        email: \"\",\r\n        userRole: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const [formCheck, setFormCheck] = useState({\r\n        // errorMark: { required талбаруудын анхны утга true байх! энэ нь бөглөөгүй шууд submit хийсэн үед алдаа үзүүлэх зорилготой\r\n            regNo: true,\r\n            lname: true,\r\n            fname: true,\r\n            phoneNo: true,\r\n            password: true,\r\n            email: true,\r\n            userRole: true,\r\n            description: true\r\n        // },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className={css.Container}>\r\n                <TextBox \r\n                    label=\"Овог*\" \r\n                    name=\"lName\" \r\n                    setComponentInfo={setHospitalInfo} \r\n                    componentInfo={hospitalInfo['lname']}\r\n                    componentAllInfo={hospitalInfo} \r\n                    setWarning={setFormErrors} \r\n                    warning={formErrors['lname']} \r\n                    allwarnings={formErrors}\r\n                    setFormCheck={setFormCheck}\r\n                    formCheckInfo={formCheck} />\r\n\r\n                <TextBox \r\n                    label=\"Нэр*\" \r\n                    name=\"fName\" \r\n                    setComponentInfo={setHospitalInfo} \r\n                    componentInfo={hospitalInfo['fname']}\r\n                    componentAllInfo={hospitalInfo} \r\n                    setWarning={setFormErrors} \r\n                    warning={formErrors['fname']} \r\n                    allwarnings={formErrors}\r\n                    setFormCheck={setFormCheck}\r\n                    formCheckInfo={formCheck} />\r\n\r\n                <TextBox \r\n                    label=\"Утас*\" \r\n                    name=\"phoneNo\" \r\n                    setComponentInfo={setHospitalInfo} \r\n                    componentInfo={hospitalInfo['phoneNo']}\r\n                    componentAllInfo={hospitalInfo} \r\n                    setWarning={setFormErrors} \r\n                    warning={formErrors['phoneNo']} \r\n                    allwarnings={formErrors}\r\n                    setFormCheck={setFormCheck}\r\n                    formCheckInfo={formCheck} />\r\n\r\n                <TextBox \r\n                    label=\"Имэйл*\" \r\n                    name=\"email\" \r\n                    setComponentInfo={setHospitalInfo} \r\n                    componentInfo={hospitalInfo['email']}\r\n                    componentAllInfo={hospitalInfo} \r\n                    setWarning={setFormErrors} \r\n                    warning={formErrors['email']} \r\n                    allwarnings={formErrors}\r\n                    setFormCheck={setFormCheck}\r\n                    formCheckInfo={formCheck} />\r\n\r\n                <TextBox \r\n                    label=\"Нууц үг*\" \r\n                    name=\"password1\" \r\n                    setComponentInfo={setHospitalInfo} \r\n                    componentInfo={hospitalInfo['password1']}\r\n                    componentAllInfo={hospitalInfo} \r\n                    setWarning={setFormErrors} \r\n                    warning={formErrors['password1']} \r\n                    allwarnings={formErrors}\r\n                    setFormCheck={setFormCheck}\r\n                    formCheckInfo={formCheck} />\r\n\r\n                <TextBox \r\n                    label=\"Нууц үг давтах*\" \r\n                    name=\"password2\" \r\n                    setComponentInfo={setHospitalInfo} \r\n                    componentInfo={hospitalInfo['password2']}\r\n                    componentAllInfo={hospitalInfo} \r\n                    setWarning={setFormErrors} \r\n                    warning={formErrors['password2']} \r\n                    allwarnings={formErrors}\r\n                    setFormCheck={setFormCheck}\r\n                    formCheckInfo={formCheck} />\r\n\r\n                {/* <SelectComponent \r\n                    onchangefunc={(e) => changeDistrict(e)} \r\n                    options={optionsDistrict} \r\n                    label=\"Сум, дүүрэг\"\r\n                    setComponentInfo={setPatientInfo}\r\n                    componentAllInfo={patientInfo}\r\n                    setFormCheck={setFormCheck}\r\n                    formCheckInfo={formCheck} /> */}\r\n\r\n                <TextBox \r\n                    label=\"Тайлбар\" \r\n                    name=\"description\" \r\n                    setComponentInfo={setHospitalInfo} \r\n                    componentInfo={hospitalInfo['description']}\r\n                    componentAllInfo={hospitalInfo} \r\n                    setWarning={setFormErrors} \r\n                    warning={formErrors['description']} \r\n                    allwarnings={formErrors}\r\n                    setFormCheck={setFormCheck}\r\n                    formCheckInfo={formCheck} />\r\n                \r\n                <br />\r\n                <br />\r\n                {/* clicked={submitForm} */}\r\n                <Button text=\"Бүртгэх\"  />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HospitalSettings;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Input, Button as ButtonAnt, Space } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { Excel } from \"antd-table-saveas-excel\";\r\n\r\nconst ListHospitals = () => {\r\n    const [hospitals, setHospitals] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n    const searchInput = useRef(null);\r\n    const tempStorage = [];\r\n\r\n    const fetchData = async () => {\r\n        let hospitalsRef = db.collection(\"hospitals\")\r\n        let dataRef = await hospitalsRef.get();\r\n        dataRef.docs.map(hospital => {\r\n            let currentID = hospital.id;\r\n            let dateCreated = hospital.data().createdDate.toDate();\r\n            let dateModified = hospital.data().modifiedDate.toDate();\r\n            dateCreated = dateCreated.getUTCDate()+\"/\"+(dateCreated.getMonth()+1)+\"/\"+dateCreated.getUTCFullYear();\r\n            dateModified = dateModified.getUTCDate()+\"/\"+(dateModified.getMonth()+1)+\"/\"+dateModified.getUTCFullYear();\r\n            let dataStorage = { \r\n                ...hospital.data(), \r\n                ['id']: currentID, \r\n                ['createdDateFormatted']: dateCreated,\r\n                ['modifiedDateFormatted']: dateModified,\r\n            };\r\n            tempStorage.push(dataStorage);\r\n        });\r\n\r\n        setHospitals(tempStorage);\r\n    };\r\n\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n\r\n    const getColumnSearchProps = dataIndex => {\r\n        return {\r\n            filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n                <div style={{ padding: 8 }}>\r\n                    <Input\r\n                        // ref={node => { this.searchInput = node;}}\r\n                        ref={ searchInput }\r\n                        placeholder={`Search ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                        onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        style={{ marginBottom: 8, display: \"block\" }} \r\n                    />\r\n                    <Space>\r\n                        <ButtonAnt \r\n                            type=\"primary\"\r\n                            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                            icon={<SearchOutlined />}\r\n                            size=\"small\"\r\n                            style={{ width: 90 }} >\r\n                            Search\r\n                        </ButtonAnt>\r\n                        <ButtonAnt onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                            Reset\r\n                        </ButtonAnt>\r\n                        <ButtonAnt \r\n                            type=\"link\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                confirm({ closeDropdown: false });\r\n                                setSearchText(selectedKeys[0]);\r\n                                setSearchedColumn(dataIndex);\r\n                            }} >\r\n                            Filter\r\n                        </ButtonAnt>\r\n                    </Space>\r\n                </div>\r\n            ),\r\n            filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n            onFilter: (value, record) =>\r\n                record[dataIndex]\r\n                    ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                    : '',\r\n            onFilterDropdownVisibleChange: visible => {\r\n                if (visible) {\r\n                    setTimeout(() => searchInput.current.select(), 100);\r\n                }\r\n            },\r\n            render: text =>\r\n                searchedColumn === dataIndex ? (\r\n                    <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                    />\r\n                ) : (\r\n                    text\r\n                ),\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"ID\",\r\n            dataIndex: \"id\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"id\"),\r\n        },\r\n        {\r\n            title: \"Байг/Регистр\",\r\n            dataIndex: \"orgRegNo\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"orgRegNo\"),\r\n        },\r\n        {\r\n            title: \"Байг/Нэр\",\r\n            dataIndex: \"hospitalName\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"hospitalName\"),\r\n        },\r\n        {\r\n            title: \"Оффис имэйл\",\r\n            dataIndex: \"hospEmail\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"hospEmail\"),\r\n        },\r\n        {\r\n            title: \"Оффис утас\",\r\n            dataIndex: \"officePhoneNo\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"officePhoneNo\"),\r\n        },\r\n        {\r\n            title: \"Овог\",\r\n            dataIndex: \"lname\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"lname\"),\r\n        },\r\n        {\r\n            title: \"Нэр\",\r\n            dataIndex: \"fname\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"fname\"),\r\n        },\r\n        {\r\n            title: \"Имэйл\",\r\n            dataIndex: \"email\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"email\"),\r\n        },\r\n        {\r\n            title: \"Утас\",\r\n            dataIndex: \"phoneNo\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"phoneNo\"),\r\n        },\r\n        {\r\n            title: \"Үүсгэсэн\",\r\n            dataIndex: \"createdDateFormatted\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"createdDateFormatted\"),\r\n        },\r\n        {\r\n            title: \"Өөрчилсөн\",\r\n            dataIndex: \"modifiedDateFormatted\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"modifiedDateFormatted\"),\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ flexDirection: \"column\", marginLeft: 10, marginRight: 10 }}>\r\n            <ButtonAnt\r\n                style={{ \r\n                    marginTop: 10, \r\n                    float: \"right\", \r\n                    marginRight: 10, \r\n                    backgroundColor: \"#4cbbb9\", \r\n                    borderColor: \"#4cbbb9\",\r\n                    color: \"white\",\r\n                    borderRadius: 5,\r\n                }}\r\n                onClick={() => {\r\n                    const excel = new Excel();\r\n                    excel\r\n                        .addSheet(\"Sheet1\")\r\n                        .addColumns(columns)\r\n                        .addDataSource(hospitals)\r\n                        .saveAs(\"ListHospitals.xlsx\")\r\n                }} >\r\n                Экспортлох\r\n            </ButtonAnt>\r\n            <Table\r\n                dataSource={hospitals}\r\n                columns={columns}\r\n                pagination={{ pageSize: 50 }} \r\n                scroll={{ y: 240 }} exportable />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ListHospitals;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Input, Button as ButtonAnt, Space } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { Excel } from \"antd-table-saveas-excel\";\r\n\r\nconst ListDepartment = () => {\r\n    const [departments, setDepartments] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n    const searchInput = useRef(null);\r\n    const tempStorage = [];\r\n\r\n    const fetchData = async () => {\r\n        let departmentsRef = db.collection(\"departments\")\r\n        let dataRef = await departmentsRef.get();\r\n        dataRef.docs.map(department => {\r\n            let currentID = department.id;\r\n            let dateCreated = department.data().createdDate.toDate();\r\n            let dateModified = department.data().modifiedDate.toDate();\r\n            dateCreated = dateCreated.getUTCDate()+\"/\"+(dateCreated.getMonth()+1)+\"/\"+dateCreated.getUTCFullYear();\r\n            dateModified = dateModified.getUTCDate()+\"/\"+(dateModified.getMonth()+1)+\"/\"+dateModified.getUTCFullYear();\r\n            let dataStorage = { \r\n                ...department.data(), \r\n                ['id']: currentID, \r\n                ['createdDateFormatted']: dateCreated,\r\n                ['modifiedDateFormatted']: dateModified,\r\n            };\r\n            tempStorage.push(dataStorage);\r\n        });\r\n\r\n        setDepartments(tempStorage);\r\n    };\r\n\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n\r\n    const getColumnSearchProps = dataIndex => {\r\n        return {\r\n            filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n                <div style={{ padding: 8 }}>\r\n                    <Input\r\n                        // ref={node => { this.searchInput = node;}}\r\n                        ref={ searchInput }\r\n                        placeholder={`Search ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                        onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        style={{ marginBottom: 8, display: \"block\" }} \r\n                    />\r\n                    <Space>\r\n                        <ButtonAnt \r\n                            type=\"primary\"\r\n                            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                            icon={<SearchOutlined />}\r\n                            size=\"small\"\r\n                            style={{ width: 90 }} >\r\n                            Search\r\n                        </ButtonAnt>\r\n                        <ButtonAnt onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                            Reset\r\n                        </ButtonAnt>\r\n                        <ButtonAnt \r\n                            type=\"link\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                confirm({ closeDropdown: false });\r\n                                setSearchText(selectedKeys[0]);\r\n                                setSearchedColumn(dataIndex);\r\n                            }} >\r\n                            Filter\r\n                        </ButtonAnt>\r\n                    </Space>\r\n                </div>\r\n            ),\r\n            filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n            onFilter: (value, record) =>\r\n                record[dataIndex]\r\n                    ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                    : '',\r\n            onFilterDropdownVisibleChange: visible => {\r\n                if (visible) {\r\n                    setTimeout(() => searchInput.current.select(), 100);\r\n                }\r\n            },\r\n            render: text =>\r\n                searchedColumn === dataIndex ? (\r\n                    <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                    />\r\n                ) : (\r\n                    text\r\n                ),\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"ID\",\r\n            dataIndex: \"id\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"id\"),\r\n        },\r\n        {\r\n            title: \"Тасгийн нэр\",\r\n            dataIndex: \"departmentName\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"departmentName\"),\r\n        },\r\n        {\r\n            title: \"Тасгийн имэйл\",\r\n            dataIndex: \"departmentEmail\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"departmentEmail\"),\r\n        },\r\n        {\r\n            title: \"Тасгийн утас\",\r\n            dataIndex: \"departmentPhoneNo\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"departmentPhoneNo\"),\r\n        },\r\n        {\r\n            title: \"Овог\",\r\n            dataIndex: \"lname\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"lname\"),\r\n        },\r\n        {\r\n            title: \"Нэр\",\r\n            dataIndex: \"fname\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"fname\"),\r\n        },\r\n        {\r\n            title: \"Имэйл\",\r\n            dataIndex: \"email\",\r\n            key: \"key\",\r\n            // width: \"15%\",\r\n            ...getColumnSearchProps(\"email\"),\r\n        },\r\n        {\r\n            title: \"Утас\",\r\n            dataIndex: \"phoneNo\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"phoneNo\"),\r\n        },\r\n        {\r\n            title: \"Үүсгэсэн\",\r\n            dataIndex: \"createdDateFormatted\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"createdDateFormatted\"),\r\n        },\r\n        {\r\n            title: \"Өөрчилсөн\",\r\n            dataIndex: \"modifiedDateFormatted\",\r\n            key: \"key\",\r\n            // width: \"10%\",\r\n            ...getColumnSearchProps(\"modifiedDateFormatted\"),\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ flexDirection: \"column\", marginLeft: 10, marginRight: 10 }}>\r\n            <ButtonAnt\r\n                style={{ \r\n                    marginTop: 10, \r\n                    float: \"right\", \r\n                    marginRight: 10, \r\n                    backgroundColor: \"#4cbbb9\", \r\n                    borderColor: \"#4cbbb9\",\r\n                    color: \"white\",\r\n                    borderRadius: 5,\r\n                }}\r\n                onClick={() => {\r\n                    const excel = new Excel();\r\n                    excel\r\n                        .addSheet(\"Sheet1\")\r\n                        .addColumns(columns)\r\n                        .addDataSource(departments)\r\n                        .saveAs(\"ListDepartments.xlsx\")\r\n                }} >\r\n                Экспортлох\r\n            </ButtonAnt>\r\n            <Table\r\n                dataSource={departments}\r\n                columns={columns}\r\n                pagination={{ pageSize: 50 }} \r\n                scroll={{ y: 240 }} exportable />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ListDepartment;","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { db } from \"../../firebase\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Input, Button as ButtonAnt, Space } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { Excel } from \"antd-table-saveas-excel\";\r\n\r\nconst ListEmployees = () => {\r\n    const [employees, setEmployees] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [searchedColumn, setSearchedColumn] = useState(\"\");\r\n    const searchInput = useRef(null);\r\n    const tempStorage = [];\r\n\r\n    const fetchData = async () => {\r\n        let employeesRef = db.collection(\"employees\")\r\n        let dataRef = await employeesRef.get();\r\n        dataRef.docs.map(employee => {\r\n            let currentID = employee.id;\r\n            let dateCreated = employee.data().createdDate.toDate();\r\n            let dateModified = employee.data().modifiedDate.toDate();\r\n            dateCreated = dateCreated.getUTCDate()+\"/\"+(dateCreated.getMonth()+1)+\"/\"+dateCreated.getUTCFullYear();\r\n            dateModified = dateModified.getUTCDate()+\"/\"+(dateModified.getMonth()+1)+\"/\"+dateModified.getUTCFullYear();\r\n            let dataStorage = { \r\n                ...employee.data(), \r\n                ['id']: currentID, \r\n                ['createdDateFormatted']: dateCreated,\r\n                ['modifiedDateFormatted']: dateModified,\r\n            };\r\n            tempStorage.push(dataStorage);\r\n        });\r\n\r\n        setEmployees(tempStorage);\r\n    };\r\n\r\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n        confirm();\r\n        setSearchText(selectedKeys[0]);\r\n        setSearchedColumn(dataIndex);\r\n    };\r\n\r\n    const handleReset = clearFilters => {\r\n        clearFilters();\r\n        setSearchText(\"\");\r\n    };\r\n\r\n    const getColumnSearchProps = dataIndex => {\r\n        return {\r\n            filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n                <div style={{ padding: 8 }}>\r\n                    <Input\r\n                        // ref={node => { this.searchInput = node;}}\r\n                        ref={ searchInput }\r\n                        placeholder={`Search ${dataIndex}`}\r\n                        value={selectedKeys[0]}\r\n                        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n                        onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                        style={{ marginBottom: 8, display: \"block\" }} \r\n                    />\r\n                    <Space>\r\n                        <ButtonAnt \r\n                            type=\"primary\"\r\n                            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n                            icon={<SearchOutlined />}\r\n                            size=\"small\"\r\n                            style={{ width: 90 }} >\r\n                            Search\r\n                        </ButtonAnt>\r\n                        <ButtonAnt onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n                            Reset\r\n                        </ButtonAnt>\r\n                        <ButtonAnt \r\n                            type=\"link\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                confirm({ closeDropdown: false });\r\n                                setSearchText(selectedKeys[0]);\r\n                                setSearchedColumn(dataIndex);\r\n                            }} >\r\n                            Filter\r\n                        </ButtonAnt>\r\n                    </Space>\r\n                </div>\r\n            ),\r\n            filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n            onFilter: (value, record) =>\r\n                record[dataIndex]\r\n                    ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                    : '',\r\n            onFilterDropdownVisibleChange: visible => {\r\n                if (visible) {\r\n                    setTimeout(() => searchInput.current.select(), 100);\r\n                }\r\n            },\r\n            render: text =>\r\n                searchedColumn === dataIndex ? (\r\n                    <Highlighter\r\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n                    searchWords={[searchText]}\r\n                    autoEscape\r\n                    textToHighlight={text ? text.toString() : ''}\r\n                    />\r\n                ) : (\r\n                    text\r\n                ),\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: \"ID\",\r\n            dataIndex: \"id\",\r\n            key: \"key\",\r\n            width: \"15%\",\r\n            ...getColumnSearchProps(\"id\"),\r\n        },\r\n        {\r\n            title: \"Имэйл\",\r\n            dataIndex: \"email\",\r\n            key: \"key\",\r\n            width: \"15%\",\r\n            ...getColumnSearchProps(\"email\"),\r\n        },\r\n        {\r\n            title: \"Овог\",\r\n            dataIndex: \"lname\",\r\n            key: \"key\",\r\n            width: \"10%\",\r\n            ...getColumnSearchProps(\"lname\"),\r\n        },\r\n        {\r\n            title: \"Нэр\",\r\n            dataIndex: \"fname\",\r\n            key: \"key\",\r\n            width: \"10%\",\r\n            ...getColumnSearchProps(\"fname\"),\r\n        },\r\n        {\r\n            title: \"Регистр\",\r\n            dataIndex: \"regNo\",\r\n            key: \"key\",\r\n            width: \"10%\",\r\n            ...getColumnSearchProps(\"regNo\"),\r\n        },\r\n        {\r\n            title: \"Утас\",\r\n            dataIndex: \"phoneNo\",\r\n            key: \"key\",\r\n            width: \"10%\",\r\n            ...getColumnSearchProps(\"phoneNo\"),\r\n        },\r\n        {\r\n            title: \"Эрх\",\r\n            dataIndex: \"userRole\",\r\n            key: \"key\",\r\n            width: \"10%\",\r\n            ...getColumnSearchProps(\"userRole\"),\r\n        },\r\n        {\r\n            title: \"Үүсгэсэн\",\r\n            dataIndex: \"createdDateFormatted\",\r\n            key: \"key\",\r\n            width: \"10%\",\r\n            ...getColumnSearchProps(\"createdDateFormatted\"),\r\n        },\r\n        {\r\n            title: \"Өөрчилсөн\",\r\n            dataIndex: \"modifiedDateFormatted\",\r\n            key: \"key\",\r\n            width: \"10%\",\r\n            ...getColumnSearchProps(\"modifiedDateFormatted\"),\r\n        },\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ flexDirection: \"column\", marginLeft: 10, marginRight: 10 }}>\r\n            <ButtonAnt\r\n                style={{ \r\n                    marginTop: 10, \r\n                    float: \"right\", \r\n                    marginRight: 10, \r\n                    backgroundColor: \"#4cbbb9\", \r\n                    borderColor: \"#4cbbb9\",\r\n                    color: \"white\",\r\n                    borderRadius: 5,\r\n                }}\r\n                onClick={() => {\r\n                    const excel = new Excel();\r\n                    excel\r\n                        .addSheet(\"test\")\r\n                        .addColumns(columns)\r\n                        .addDataSource(employees)\r\n                        .saveAs(\"ListEmployees.xlsx\")\r\n                }} >\r\n                Экспортлох\r\n            </ButtonAnt>\r\n            <Table\r\n                dataSource={employees}\r\n                columns={columns}\r\n                pagination={{ pageSize: 50 }} \r\n                scroll={{ y: 240 }} exportable />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ListEmployees;","import React, { useEffect } from 'react';\nimport LoginPage from '../LoginPage';\nimport Logout from '../../components/Logout';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport HomePageDoctor from '../HomePageDoctor';\nimport HomePageReception from '../HomePageReception';\nimport CreateHospital from '../../components/CreateHospital';\nimport CreateDepartment from '../../components/CreateDepartment';\nimport HomePageDefault from '../HomePageDefault';\nimport SignupPage from '../SignupPage';\nimport { AuthProvider } from \"../../auth/Auth\";\nimport * as actions from \"../../redux/actions/loginActions\";\nimport Profile from '../../components/Profile';\nimport Toolbar from '../../components/Toolbar';\nimport Menu from '../../components/Menu';\nimport css from './style.module.css';\nimport AppointmentContainer from '../../components/AppointmentContainer';\nimport AppointmentPicker from '../../components/AppointmentPicker';\nimport { AppointmentStore } from \"../../context/AppointmentContext\";\nimport HospitalSettings from '../../components/HospitalSettings';\nimport ListHospitals from '../../components/ListHospitals';\nimport ListDepartment from '../../components/ListDepartments';\nimport ListEmployees from '../../components/ListEmployees';\n\nconst App = props => {\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\");\n    const expireDate = new Date(localStorage.getItem(\"expireDate\"));\n    // const refreshToken = localStorage.getItem(\"refreshToken\");\n    const userRole = localStorage.getItem(\"userRole\");\n    const lname = localStorage.getItem(\"lname\");\n    const fname = localStorage.getItem(\"fname\");\n\n    if(token) {\n      if(expireDate > new Date()) {\n        const leftSeconds = expireDate.getTime()-new Date().getTime();\n        props.autoLogin(token, userId, userRole, lname, fname, leftSeconds);\n      } else {\n        props.logout();\n      }\n    }\n  }, []);\n\n  return (\n    <>\n        {/* User ID: {props.userId} <br/>\n        User Role: {props.userRole} */\n        <b>{process.env.NODE_ENV}</b>}\n        <AuthProvider>\n        {props.userId ?\n          (\n            <>\n              <Toolbar />\n              <div className={css.HomePage}>\n                <Menu />\n                <Switch>\n                  <Route path=\"/logout\" component={Logout} />\n                  {/* <Route path=\"/doctor\" component={HomePageDoctor} />\n                  <Route path=\"/reception\" component={HomePageReception} />  */}\n                  <Route path=\"/profile\" component={Profile} />\n                  <Route path=\"/settings\" component={HospitalSettings} />\n                  <Route path=\"/createHospital\" component={CreateHospital} />\n                  <Route path=\"/createDepartment\" component={CreateDepartment} />\n                  <Route path=\"/signupEmployee\" component={SignupPage} />\n                  <Route path=\"/listHospitals\" component={ListHospitals} />\n                  <Route path=\"/listDepartments\" component={ListDepartment} />\n                  <Route path=\"/listEmployees\" component={ListEmployees} />\n                  \n                  <AppointmentStore>\n                    <Route path=\"/bill\" component={AppointmentPicker} />\n                    <Route path=\"/appointment\" component={AppointmentContainer} />\n                  </AppointmentStore>\n                  \n                  <Route path=\"/\" component={HomePageDefault} />\n                </Switch>\n              </div>\n            </>\n          ) :\n          (\n            <Switch>\n              <Route path=\"/login\" component={LoginPage} />\n              {/* <Route path=\"/signup\" component={SignupPage} /> */}\n              {/* <Route path=\"/createaccess\" component={CreateAccess} />\n              <Route path=\"/createdepartment\" component={CreateDepartment} /> */}\n              <Route path=\"/\" component={LoginPage} />\n            </Switch>\n          )\n        }\n      </AuthProvider>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.signupLoginReducer.userId,\n    userRole: state.signupLoginReducer.userRole\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    autoLogin: (token, userId, userRole, lname, fname, leftSeconds) =>\n      dispatch(actions.loginUserSuccess(token, userId, userRole, lname, fname, leftSeconds)),\n      logout: () => dispatch(actions.logout),\n      autoLoginAfterMilSeconds: (leftSeconds) => dispatch(actions. autoLoginAfterMilSeconds(leftSeconds))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    saving: false,\r\n    logginIn: false,\r\n    authServerError: null,\r\n    authServerErrorCode: null,\r\n    token: null,\r\n    userId: null,\r\n    userRole: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"SIGNUP_USER_START\" : return {\r\n            ...state,\r\n            saving: true\r\n        };\r\n\r\n        case \"SIGNUP_USER_SUCCESS\" : return {\r\n            ...state,\r\n            saving: false,\r\n            token: action.token,\r\n            userId: action.userId,\r\n            userRole: action.userRole,\r\n            lname: action.lname,\r\n            fname: action.fname\r\n        };\r\n\r\n        case \"SIGNUP_USER_ERROR\" : return {\r\n            ...state,\r\n            saving: false,\r\n            authServerError: action.error.response.data.error.message,\r\n            authServerErrorCode: action.error.response.data.error.code\r\n        };\r\n\r\n        case \"LOGIN_USER_START\" : return {\r\n            ...state,\r\n            logginIn: true\r\n        };\r\n\r\n        case \"LOGIN_USER_SUCCESS\" : return {\r\n            ...state,\r\n            logginIn: false,\r\n            token: action.token,\r\n            userId: action.userId,\r\n            userRole: action.userRole,\r\n            lname: action.lname,\r\n            fname: action.fname\r\n        };\r\n\r\n        case \"LOGIN_USER_ERROR\" : return {\r\n            ...state,\r\n            logginIn: false,\r\n            authServerError: action.error.response.data.error.message,\r\n            authServerErrorCode: action.error.response.data.error.code\r\n        };\r\n\r\n        case \"LOGOUT\" : return {\r\n            ...state,\r\n            token: null,\r\n            userId: null,\r\n            authServerError: null,\r\n            authServerErrorCode: null\r\n        };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","const initialState = {\r\n    apps: []\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch(action.type) {\r\n        case \"COLLECT_APPOINTMENTS_ALL\" : return {\r\n            ...state,\r\n            apps: [...state.apps, action.apps],\r\n            // ...state,\r\n            // apps: action.apps\r\n            // apps: ([action.apps.isClicked] === true) ? [action.apps] : [...state.apps]\r\n            // apps: ([action.apps.isClicked]===true) ? [action.apps.isClicked] : [!action.apps.isClicked]\r\n        };\r\n\r\n        case \"COLLECT_APP_DATE\" : return {\r\n            ...state,\r\n            selectedDate: action.selectedDate,\r\n            busyTimes: action.busyTimes\r\n        };\r\n\r\n        case \"COLLECT_APP_TIME\" : return {\r\n            ...state,\r\n            selectedTime: action.selectedTime\r\n        };\r\n\r\n        case \"COLLECT_REG_NO\" : return {\r\n            ...state,\r\n            selectedRegNo: action.selectedRegNo\r\n        };\r\n\r\n        case \"PREPARE_APP_TIMES\" : return {\r\n            ...state,\r\n            test1: action.test1\r\n        };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport App from './pages/App';\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport signupLoginReducer from \"./redux/reducer/signupLoginReducer\";\nimport appointmentReducer from \"./redux/reducer/appointmentReducer\";\n\nconst loggerMiddleware = store => {\n  return next => {\n    return action => {\n        console.log(\"MyLoggerMiddleware: Dispatching ==> \", action);\n        console.log(\"MyLoggerMiddleware: State before : \", store.getState());\n        const result = next(action);\n        console.log(\"MyLoggerMiddleware: State after : \", store.getState());\n        return result;\n    };\n  };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst reducers = combineReducers({\n  signupLoginReducer,\n  appointmentReducer\n});\n\nconst middlewares = [loggerMiddleware, thunk];\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(...middlewares)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"style_FormControl__AXl0l\",\"Container\":\"style_Container__2r4gy\",\"IconStyleCorrect\":\"style_IconStyleCorrect__zK3NO\",\"IconStyleWrong\":\"style_IconStyleWrong__3QUjY\",\"Label\":\"style_Label__3qkpG\",\"Error\":\"style_Error__3_MCH\",\"FocusInput\":\"style_FocusInput__3f92K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__2EjKF\",\"Profile\":\"style_Profile__acYNu\",\"ProfileUpdateForm\":\"style_ProfileUpdateForm__1tv-F\",\"FormControl\":\"style_FormControl__BY8jE\",\"Label\":\"style_Label__1gfeL\",\"Input\":\"style_Input__1Z3iF\",\"FocusInput\":\"style_FocusInput__1x6uw\",\"SelectStyle\":\"style_SelectStyle__2BB77\",\"Title\":\"style_Title__YQfea\",\"FlexContainer\":\"style_FlexContainer__RwNaC\",\"FlexColumn\":\"style_FlexColumn__1nwB_\",\"PosRel\":\"style_PosRel__1ys49\",\"AutoContainer\":\"style_AutoContainer__3BjWT\",\"AppComponent\":\"style_AppComponent__3Md3Y\",\"SearchBar\":\"style_SearchBar__3Al76\"};"],"sourceRoot":""}